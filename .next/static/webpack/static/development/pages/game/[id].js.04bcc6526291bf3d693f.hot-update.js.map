{"version":3,"file":"static/webpack/static/development/pages/game/[id].js.04bcc6526291bf3d693f.hot-update.js","sources":["webpack:///./component/game.tsx"],"sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore } from \"../api/firebase\";\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore(newScore) {\n    updateScore(gameID, userID, number, newScore % 4);\n  }\n\n  return (\n    <div className=\"score__item flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleUpdateScore(score + 1)}\n        className={classnames(\"flex-1 text-white ont-bold w-100\", {\n          \"bg-teal-600 hover:bg-teal-500\": isMine\n        })}\n      >\n        {score === 0 ? \"\" : score}\n      </button>\n    </div>\n  );\n}\n\nexport default function Game(props) {\n  const { join_id, players, id: gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div className=\"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\">\n      <div className=\"flex\">\n        <div className=\"score__column flex flex-col justify-center align-center\">\n          {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n            return (\n              <div className=\"score__item px-2 flex items-center justify-center\">\n                <span>{value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {players.map(({ id, name, score }) => {\n          const isMine = id === userID;\n          return (\n            <div className=\"score__column\">\n              <div\n                className={classnames(\n                  \"score__item text-center border-gray-400 p-5\",\n                  {\n                    \"bg-teal-600\": isMine\n                  }\n                )}\n              >\n                {name}\n              </div>\n              {Object.keys(score)\n                .sort((a, b) => a - b)\n                .map(number => {\n                  const scoreForNumber = score[number];\n                  return (\n                    <ScoreRow\n                      key={number}\n                      number={number}\n                      score={scoreForNumber}\n                      playerID={id}\n                      gameID={gameID}\n                    />\n                  );\n                })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAGA;AAIA;;;;A","sourceRoot":""}