{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getUser } from \"../api/firebase\";\nvar USER_ID = \"user_id\";\nexport function useGetUser() {\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      userID = _React$useState2[0],\n      setUserID = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  React.useEffect(function () {\n    var userIDCookie = Cookies.get(USER_ID);\n\n    if (userIDCookie) {\n      setUserID(userIDCookie);\n    } else {\n      var newID = uuidv4();\n      Cookies.set(USER_ID, newID, {\n        expires: 365\n      });\n      setUserID(newID);\n    }\n  }, []);\n  React.useEffect(function () {\n    if (userID) {\n      getUser(userID).then(function (userFromDB) {\n        setUser(userFromDB);\n      })[\"catch\"](function (error) {\n        setError(error);\n      });\n    }\n  }, [userID]);\n  return [user, error];\n}\nexport function useGetUserID() {\n  var _useGetUser = useGetUser(),\n      _useGetUser2 = _slicedToArray(_useGetUser, 1),\n      user = _useGetUser2[0];\n\n  return user && user.id;\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/effects/user.ts"],"names":["React","v4","uuidv4","Cookies","getUser","USER_ID","useGetUser","useState","userID","setUserID","user","setUser","error","setError","useEffect","userIDCookie","get","newID","set","expires","then","userFromDB","useGetUserID","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,IAAMC,OAAO,GAAG,SAAhB;AAEA,OAAO,SAASC,UAAT,GAAsC;AAAA,wBACfN,KAAK,CAACO,QAAN,EADe;AAAA;AAAA,MACpCC,MADoC;AAAA,MAC5BC,SAD4B;;AAAA,yBAEnBT,KAAK,CAACO,QAAN,EAFmB;AAAA;AAAA,MAEpCG,IAFoC;AAAA,MAE9BC,OAF8B;;AAAA,yBAGjBX,KAAK,CAACO,QAAN,EAHiB;AAAA;AAAA,MAGpCK,KAHoC;AAAA,MAG7BC,QAH6B;;AAK3Cb,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAGZ,OAAO,CAACa,GAAR,CAAYX,OAAZ,CAArB;;AACA,QAAIU,YAAJ,EAAkB;AAChBN,MAAAA,SAAS,CAACM,YAAD,CAAT;AACD,KAFD,MAEO;AACL,UAAME,KAAK,GAAGf,MAAM,EAApB;AACAC,MAAAA,OAAO,CAACe,GAAR,CAAYb,OAAZ,EAAqBY,KAArB,EAA4B;AAC1BE,QAAAA,OAAO,EAAE;AADiB,OAA5B;AAIAV,MAAAA,SAAS,CAACQ,KAAD,CAAT;AACD;AACF,GAZD,EAYG,EAZH;AAcAjB,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAM;AACpB,QAAIN,MAAJ,EAAY;AACVJ,MAAAA,OAAO,CAACI,MAAD,CAAP,CACGY,IADH,CACQ,UAAAC,UAAU,EAAI;AAClBV,QAAAA,OAAO,CAACU,UAAD,CAAP;AACD,OAHH,WAIS,UAAAT,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OANH;AAOD;AACF,GAVD,EAUG,CAACJ,MAAD,CAVH;AAYA,SAAO,CAACE,IAAD,EAAOE,KAAP,CAAP;AACD;AAED,OAAO,SAASU,YAAT,GAAgC;AAAA,oBACtBhB,UAAU,EADY;AAAA;AAAA,MAC9BI,IAD8B;;AAGrC,SAAOA,IAAI,IAAIA,IAAI,CAACa,EAApB;AACD","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getUser } from \"../api/firebase\";\n\nconst USER_ID = \"user_id\";\n\nexport function useGetUser(): [User, Error?] {\n  const [userID, setUserID] = React.useState<string>();\n  const [user, setUser] = React.useState<User>();\n  const [error, setError] = React.useState();\n\n  React.useEffect(() => {\n    const userIDCookie = Cookies.get(USER_ID);\n    if (userIDCookie) {\n      setUserID(userIDCookie);\n    } else {\n      const newID = uuidv4();\n      Cookies.set(USER_ID, newID, {\n        expires: 365\n      });\n\n      setUserID(newID);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (userID) {\n      getUser(userID)\n        .then(userFromDB => {\n          setUser(userFromDB);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }, [userID]);\n\n  return [user, error];\n}\n\nexport function useGetUserID(): string {\n  const [user] = useGetUser();\n\n  return user && user.id;\n}\n"]},"metadata":{},"sourceType":"module"}