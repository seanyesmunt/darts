{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore } from \"../api/firebase\";\nexport default function Game(props) {\n  var join_id = props.join_id,\n      players = props.players,\n      gameID = props.id;\n  var userID = useGetUserID();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(ScoreBoard, {\n    players: players,\n    gameID: gameID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ScoreBoard(props) {\n  var _this = this;\n\n  var players = props.players,\n      gameID = props.gameID;\n  var userID = useGetUserID();\n  return __jsx(\"div\", {\n    className: \"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"score__column flex flex-col justify-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, [\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(function (value) {\n    return __jsx(\"div\", {\n      className: \"score__item px-2 flex items-center justify-center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, value));\n  })), players.map(function (_ref) {\n    var id = _ref.id,\n        name = _ref.name,\n        score = _ref.score;\n    var isMine = id === userID;\n    return __jsx(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"score__column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classnames(\"score__item text-center border-gray-400 p-5\", {\n        \"bg-teal-600\": isMine\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, name), __jsx(ScoreTotal, {\n      score: score,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })), Object.keys(score).sort(function (a, b) {\n      if (a === \"bull\") {\n        return 1;\n      } else if (b === \"bull\") {\n        return -1;\n      } else {\n        var numberA = Number(a);\n        var numberB = Number(b);\n        return numberB - numberA;\n      }\n    }).map(function (number) {\n      var scoreForNumber = score[number];\n      return __jsx(ScoreRow, {\n        key: number,\n        number: number,\n        score: scoreForNumber,\n        playerID: id,\n        gameID: gameID,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 23\n        }\n      });\n    })));\n  })));\n}\n\nfunction ScoreRow(props) {\n  var number = props.number,\n      score = props.score,\n      gameID = props.gameID,\n      playerID = props.playerID;\n  var userID = useGetUserID();\n  var isMine = playerID === userID;\n\n  function handleUpdateScore(newScore) {\n    updateScore(gameID, userID, number, newScore);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: function onClick() {\n      return handleUpdateScore(score + 1);\n    },\n    className: classnames(\"flex-1 text-white ont-bold w-100\", {\n      \"bg-teal-600 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, score === 0 ? \"\" : score));\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateScore","Game","props","join_id","players","gameID","id","userID","ScoreBoard","map","value","name","score","isMine","Object","keys","sort","a","b","numberA","Number","numberB","number","scoreForNumber","ScoreRow","playerID","handleUpdateScore","newScore"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore } from \"../api/firebase\";\n\nexport default function Game(props) {\n  const { join_id, players, id: gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div>\n      <ScoreBoard players={players} gameID={gameID} />\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div className=\"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\">\n      <div className=\"flex\">\n        <div className=\"score__column flex flex-col justify-center align-center\">\n          {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n            return (\n              <div className=\"score__item px-2 flex items-center justify-center\">\n                <span>{value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {players.map(({ id, name, score }) => {\n          const isMine = id === userID;\n          return (\n            <React.Fragment>\n              <div className=\"score__column\">\n                <div\n                  className={classnames(\n                    \"score__item text-center border-gray-400 p-5\",\n                    {\n                      \"bg-teal-600\": isMine\n                    }\n                  )}\n                >\n                  <div>{name}</div>\n                  <ScoreTotal score={score} />\n                </div>\n                {Object.keys(score)\n                  .sort((a, b) => {\n                    if (a === \"bull\") {\n                      return 1;\n                    } else if (b === \"bull\") {\n                      return -1;\n                    } else {\n                      const numberA = Number(a);\n                      const numberB = Number(b);\n                      return numberB - numberA;\n                    }\n                  })\n                  .map(number => {\n                    const scoreForNumber = score[number];\n                    return (\n                      <ScoreRow\n                        key={number}\n                        number={number}\n                        score={scoreForNumber}\n                        playerID={id}\n                        gameID={gameID}\n                      />\n                    );\n                  })}\n              </div>\n            </React.Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore(newScore) {\n    updateScore(gameID, userID, number, newScore);\n  }\n\n  return (\n    <div className=\"score__item flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleUpdateScore(score + 1)}\n        className={classnames(\"flex-1 text-white ont-bold w-100\", {\n          \"bg-teal-600 hover:bg-teal-500\": isMine\n        })}\n      >\n        {score === 0 ? \"\" : score}\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}