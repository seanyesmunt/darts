{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUserID } from \"./user\";\nimport { useRouter } from \"next/router\";\nvar GAME_ID = \"game_id\";\nexport function useGetGame() {\n  var router = useRouter();\n  var userID = useGetUserID();\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gameID = _React$useState2[0],\n      setgameID = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      game = _React$useState4[0],\n      setGame = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  React.useEffect(function () {\n    var gameIDCookie = Cookies.get(GAME_ID);\n\n    if (gameIDCookie) {\n      setgameID(gameIDCookie);\n    } else {\n      var newId = uuidv4();\n      Cookies.set(GAME_ID, newId, {\n        expires: 365\n      });\n      setgameID(newId);\n    }\n  }, []);\n  React.useEffect(function () {\n    if (gameID && userID) {\n      getGame(gameID, userID).then(function (gameFromDB) {\n        return setGame(gameFromDB);\n      })[\"catch\"](function (error) {\n        setError(error);\n      });\n    }\n  }, [gameID, userID]);\n  return [game, error];\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/effects/game.ts"],"names":["React","v4","uuidv4","Cookies","getGame","useGetUserID","useRouter","GAME_ID","useGetGame","router","userID","useState","gameID","setgameID","game","setGame","error","setError","useEffect","gameIDCookie","get","newId","set","expires","then","gameFromDB"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,QAA7B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,OAAO,GAAG,SAAhB;AAEA,OAAO,SAASC,UAAT,GAAsC;AAC3C,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACA,MAAMI,MAAM,GAAGL,YAAY,EAA3B;;AAF2C,wBAGfL,KAAK,CAACW,QAAN,EAHe;AAAA;AAAA,MAGpCC,MAHoC;AAAA,MAG5BC,SAH4B;;AAAA,yBAInBb,KAAK,CAACW,QAAN,EAJmB;AAAA;AAAA,MAIpCG,IAJoC;AAAA,MAI9BC,OAJ8B;;AAAA,yBAKjBf,KAAK,CAACW,QAAN,EALiB;AAAA;AAAA,MAKpCK,KALoC;AAAA,MAK7BC,QAL6B;;AAO3CjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,QAAMC,YAAY,GAAGhB,OAAO,CAACiB,GAAR,CAAYb,OAAZ,CAArB;;AACA,QAAIY,YAAJ,EAAkB;AAChBN,MAAAA,SAAS,CAACM,YAAD,CAAT;AACD,KAFD,MAEO;AACL,UAAME,KAAK,GAAGnB,MAAM,EAApB;AACAC,MAAAA,OAAO,CAACmB,GAAR,CAAYf,OAAZ,EAAqBc,KAArB,EAA4B;AAC1BE,QAAAA,OAAO,EAAE;AADiB,OAA5B;AAIAV,MAAAA,SAAS,CAACQ,KAAD,CAAT;AACD;AACF,GAZD,EAYG,EAZH;AAcArB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,QAAIN,MAAM,IAAIF,MAAd,EAAsB;AACpBN,MAAAA,OAAO,CAACQ,MAAD,EAASF,MAAT,CAAP,CACGc,IADH,CACQ,UAAAC,UAAU;AAAA,eAAIV,OAAO,CAACU,UAAD,CAAX;AAAA,OADlB,WAES,UAAAT,KAAK,EAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAJH;AAKD;AACF,GARD,EAQG,CAACJ,MAAD,EAASF,MAAT,CARH;AAUA,SAAO,CAACI,IAAD,EAAOE,KAAP,CAAP;AACD","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUserID } from \"./user\";\nimport { useRouter } from \"next/router\";\n\nconst GAME_ID = \"game_id\";\n\nexport function useGetGame(): [Game, Error?] {\n  const router = useRouter();\n  const userID = useGetUserID();\n  const [gameID, setgameID] = React.useState<string>();\n  const [game, setGame] = React.useState<Game>();\n  const [error, setError] = React.useState<Error>();\n\n  React.useEffect(() => {\n    const gameIDCookie = Cookies.get(GAME_ID);\n    if (gameIDCookie) {\n      setgameID(gameIDCookie);\n    } else {\n      const newId = uuidv4();\n      Cookies.set(GAME_ID, newId, {\n        expires: 365\n      });\n\n      setgameID(newId);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (gameID && userID) {\n      getGame(gameID, userID)\n        .then(gameFromDB => setGame(gameFromDB))\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }, [gameID, userID]);\n\n  return [game, error];\n}\n"]},"metadata":{},"sourceType":"module"}