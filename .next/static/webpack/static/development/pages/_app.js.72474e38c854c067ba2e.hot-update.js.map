{"version":3,"file":"static/webpack/static/development/pages/_app.js.72474e38c854c067ba2e.hot-update.js","sources":["webpack:///./api/firebase.ts"],"sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyDp01-0TwxRjNC05CuDcpauXRyLSMv0RRw\",\n  authDomain: \"darts-yeslab.firebaseapp.com\",\n  databaseURL: \"https://darts-yeslab.firebaseio.com\",\n  projectId: \"darts-yeslab\",\n  storageBucket: \"darts-yeslab.appspot.com\",\n  messagingSenderId: \"426404952698\",\n  appId: \"1:426404952698:web:738ac9ab1342a1177419c3\",\n  measurementId: \"G-7DHLMBZXEN\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst database = firebase.database();\n\nfunction db(ref: string) {\n  return database.ref(`/v1/${ref}`);\n}\n\n//\n//\n// User\n//\n//\nfunction createUser(userID: string): Promise<User> {\n  const user = {\n    created_at: Date.now()\n  };\n\n  return new Promise((resolve, reject) => {\n    db(\"users/\" + userID).set(user, error => {\n      if (error) {\n        reject(error);\n      }\n\n      resolve({ ...user, id: userID });\n    });\n  });\n}\n\nexport function getUser(userID: string): Promise<User> {\n  return db(`users/${userID}`)\n    .once(\"value\")\n    .then(function(snapshot) {\n      const user = snapshot.val();\n      if (user) {\n        return { ...user, id: userID };\n      }\n\n      return createUser(userID);\n    });\n}\n\n//\n//\n// Games\n//\n//\nexport function createGame(userID: string, name: string): Promise<Game> {\n  const gameID = uuidv4();\n\n  const game: GameLessID = {\n    creator_id: userID,\n    join_id: gameID.slice(0, 4),\n    score_events: [],\n    players: [\n      {\n        id: userID,\n        name\n      }\n    ]\n  };\n\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).set(game, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve({ ...game, id: gameID });\n      }\n    });\n  });\n}\n\nexport function updateGameScore(\n  gameID: string,\n  userID: string,\n  hitValue: number\n) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n        let newGame: Game = { ...game };\n\n        if (!newGame.score_events) {\n          newGame.score_events = [];\n        }\n\n        newGame.score_events.push({\n          user_id: userID,\n          hit_value: hitValue\n        });\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n\nexport function getGame(\n  gameID: string,\n  userID: string,\n  onUpdate: any\n): Promise<Game> {\n  return new Promise((resolve, reject) => {\n    db(`/games/${gameID}`).on(\"value\", snapshot => {\n      const game = snapshot.val();\n      onUpdate(game);\n    });\n  });\n}\n\nexport function getGameId(join_id: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    db(\"games\")\n      .orderByChild(\"join_id\")\n      .equalTo(join_id)\n      .on(\"value\", function(snapshot) {\n        snapshot.forEach(function(data) {\n          const id = data.key;\n          if (!id) {\n            reject(\"Game not found.\");\n          } else {\n            resolve(id);\n          }\n        });\n      });\n  });\n}\n\nexport function addPlayerToGame(gameID, userID, name) {\n  db(`games/${gameID}`)\n    .once(\"value\")\n    .then(snapshot => {\n      const game = snapshot.val();\n      const newGame = {\n        ...game,\n        players: game.players.concat({\n          id: userID,\n          name\n        })\n      };\n      db(\"games/\" + gameID).update(newGame, error => {\n        if (error) {\n          console.error(\"error\", error);\n        }\n      });\n    });\n}\n\nexport function gameReset(gameID, userID) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n        const newGame = { ...game };\n        newGame.score_events = [];\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\nexport function gameUndoLastMove(gameID) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n        const newGame = { ...game };\n        let newScoreEvents = newGame.score_events;\n        newScoreEvents.unshift();\n        newGame.score_events = newScoreEvents;\n        debugger;\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n\nexport function newGame(gameID) {\n  return new Promise((resolve, reject) => {\n    db(\"games/\" + gameID)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n        const newGame = { ...game };\n        newGame.score_events = [];\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AALA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}