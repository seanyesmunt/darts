{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore, resetScore } from \"../api/firebase\"; // 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID,\n    creator_id\n  } = props;\n  const userID = useGetUserID();\n  const highestScore = players.reduce((acc, player) => {\n    if (player.score.total > acc) {\n      return player.score.total;\n    } else {\n      return acc;\n    }\n  }, 0);\n  const lowestScore = players.reduce((acc, player) => {\n    if (player.score.total < acc) {\n      return player.score.total;\n    } else {\n      return acc;\n    }\n  }, Infinity);\n  const creator = players.find(player => player.id === creator_id);\n  let hasWinner = false;\n  let winnerName;\n\n  for (var i = 0; i < players.length; i++) {\n    const player = players[i];\n    const scores = player.score;\n    const total = scores[15] + scores[16] + scores[17] + scores[18] + scores[19] + scores[20] + scores[\"bull\"];\n\n    if (total === 21) {\n      if (players.length > 2) {\n        // Does player have the lowest score?\n        const isLowest = players.some(player => {\n          return player.score.total === lowestScore;\n        });\n\n        if (isLowest) {\n          hasWinner = true;\n          winnerName = player.name;\n        }\n      } else {\n        // Does player have the highest score?\n        const isHighest = players.some(player => {\n          return player.score.total === highestScore;\n        });\n\n        if (isHighest) {\n          hasWinner = true;\n          winnerName = player.name;\n        }\n      }\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, hasWinner ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Winner winner for \", winnerName, \"!\"), creator && creator.id === userID ? __jsx(\"button\", {\n    className: \"bg-orange-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-8\",\n    onClick: () => newGame(gameID, userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"New Game\") : __jsx(\"div\", {\n    className: \"text-sm mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Waiting for the host to start a new game...\")) : __jsx(ScoreBoard, {\n    players: players,\n    gameID: gameID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction ScoreBoard(props) {\n  const {\n    players,\n    gameID\n  } = props;\n  const userID = useGetUserID();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"score__column flex flex-col justify-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, [\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n    return __jsx(\"div\", {\n      key: value,\n      className: \"score__item px-2 flex items-center justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }, value));\n  })), players.map(({\n    id,\n    name,\n    score\n  }) => {\n    const isMine = id === userID;\n    return __jsx(\"div\", {\n      key: id,\n      className: \"score__column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classnames(\"score__item text-center border-gray-400 p-5\", {\n        \"bg-teal-600\": isMine\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 19\n      }\n    }, name), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, score.total)), [20, 19, 18, 17, 16, 15, \"bull\"].map(number => {\n      return __jsx(ScoreRow, {\n        key: number,\n        number: number,\n        score: score[number],\n        playerID: id,\n        gameID: gameID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      });\n    }));\n  }))), __jsx(\"button\", {\n    className: \"bg-orange-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-8\",\n    onClick: () => resetScore(gameID, userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Reset Score\"));\n}\n\nfunction ScoreRow(props) {\n  const {\n    number,\n    score,\n    gameID,\n    playerID\n  } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore() {\n    updateScore(gameID, userID, number);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: () => handleUpdateScore(),\n    className: classnames(\"flex-1 text-white ont-bold w-100\", {\n      \"bg-teal-600 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, score === 0 ? \"\" : score));\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateScore","resetScore","Game","props","join_id","players","id","gameID","creator_id","userID","highestScore","reduce","acc","player","score","total","lowestScore","Infinity","creator","find","hasWinner","winnerName","i","length","scores","isLowest","some","name","isHighest","newGame","ScoreBoard","map","value","isMine","number","ScoreRow","playerID","handleUpdateScore"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore, resetScore } from \"../api/firebase\";\n\n// 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const { join_id, players, id: gameID, creator_id } = props;\n  const userID = useGetUserID();\n  const highestScore = players.reduce((acc, player) => {\n    if (player.score.total > acc) {\n      return player.score.total;\n    } else {\n      return acc;\n    }\n  }, 0);\n\n  const lowestScore = players.reduce((acc, player) => {\n    if (player.score.total < acc) {\n      return player.score.total;\n    } else {\n      return acc;\n    }\n  }, Infinity);\n\n  const creator = players.find(player => player.id === creator_id);\n\n  let hasWinner = false;\n  let winnerName;\n  for (var i = 0; i < players.length; i++) {\n    const player = players[i];\n    const scores = player.score;\n    const total =\n      scores[15] +\n      scores[16] +\n      scores[17] +\n      scores[18] +\n      scores[19] +\n      scores[20] +\n      scores[\"bull\"];\n\n    if (total === 21) {\n      if (players.length > 2) {\n        // Does player have the lowest score?\n        const isLowest = players.some(player => {\n          return player.score.total === lowestScore;\n        });\n\n        if (isLowest) {\n          hasWinner = true;\n          winnerName = player.name;\n        }\n      } else {\n        // Does player have the highest score?\n        const isHighest = players.some(player => {\n          return player.score.total === highestScore;\n        });\n\n        if (isHighest) {\n          hasWinner = true;\n          winnerName = player.name;\n        }\n      }\n    }\n  }\n\n  return (\n    <div>\n      {hasWinner ? (\n        <div>\n          <h1>Winner winner for {winnerName}!</h1>\n          {creator && creator.id === userID ? (\n            <button\n              className=\"bg-orange-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-8\"\n              onClick={() => newGame(gameID, userID)}\n            >\n              New Game\n            </button>\n          ) : (\n            <div className=\"text-sm mt-4\">\n              Waiting for the host to start a new game...\n            </div>\n          )}\n        </div>\n      ) : (\n        <ScoreBoard players={players} gameID={gameID} />\n      )}\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div>\n      <div className=\"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\">\n        <div className=\"flex\">\n          <div className=\"score__column flex flex-col justify-center align-center\">\n            {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n              return (\n                <div\n                  key={value}\n                  className=\"score__item px-2 flex items-center justify-center\"\n                >\n                  <span>{value}</span>\n                </div>\n              );\n            })}\n          </div>\n          {players.map(({ id, name, score }) => {\n            const isMine = id === userID;\n            return (\n              <div key={id} className=\"score__column\">\n                <div\n                  className={classnames(\n                    \"score__item text-center border-gray-400 p-5\",\n                    {\n                      \"bg-teal-600\": isMine\n                    }\n                  )}\n                >\n                  <div>{name}</div>\n                  <div>{score.total}</div>\n                </div>\n                {[20, 19, 18, 17, 16, 15, \"bull\"].map(number => {\n                  return (\n                    <ScoreRow\n                      key={number}\n                      number={number}\n                      score={score[number]}\n                      playerID={id}\n                      gameID={gameID}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <button\n        className=\"bg-orange-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-8\"\n        onClick={() => resetScore(gameID, userID)}\n      >\n        Reset Score\n      </button>\n    </div>\n  );\n}\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore() {\n    updateScore(gameID, userID, number);\n  }\n\n  return (\n    <div className=\"score__item flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleUpdateScore()}\n        className={classnames(\"flex-1 text-white ont-bold w-100\", {\n          \"bg-teal-600 hover:bg-teal-500\": isMine\n        })}\n      >\n        {score === 0 ? \"\" : score}\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}