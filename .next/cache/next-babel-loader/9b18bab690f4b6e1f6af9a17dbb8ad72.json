{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nconst config = {\n  apiKey: \"AIzaSyDp01-0TwxRjNC05CuDcpauXRyLSMv0RRw\",\n  authDomain: \"darts-yeslab.firebaseapp.com\",\n  databaseURL: \"https://darts-yeslab.firebaseio.com\",\n  projectId: \"darts-yeslab\",\n  storageBucket: \"darts-yeslab.appspot.com\",\n  messagingSenderId: \"426404952698\",\n  appId: \"1:426404952698:web:738ac9ab1342a1177419c3\",\n  measurementId: \"G-7DHLMBZXEN\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst database = firebase.database();\n\nfunction db(ref) {\n  return database.ref(`/v1/${ref}`);\n}\n\nfunction createUser(userID) {\n  const user = {\n    created_at: Date.now()\n  };\n  return new Promise((resolve, reject) => {\n    db(\"users/\" + userID).set(user, error => {\n      if (error) {\n        reject(error);\n      }\n\n      resolve(_objectSpread({}, user, {\n        id: userID\n      }));\n    });\n  });\n}\n\nexport function getUser(userID) {\n  return db(`users/${userID}`).once(\"value\").then(function (snapshot) {\n    const user = snapshot.val();\n\n    if (user) {\n      return _objectSpread({}, user, {\n        id: userID\n      });\n    }\n\n    return createUser(userID);\n  });\n}\nexport function getGame(gameID, userID, onUpdate) {\n  return new Promise((resolve, reject) => {\n    db(`/games/${gameID}`).on(\"value\", snapshot => {\n      const game = snapshot.val();\n      onUpdate(game);\n    });\n  });\n}\nexport function getGameId(join_id) {\n  return new Promise((resolve, reject) => {\n    db(\"games\").orderByChild(\"join_id\").equalTo(join_id).on(\"value\", function (snapshot) {\n      snapshot.forEach(function (data) {\n        const id = data.key;\n\n        if (!id) {\n          reject(\"Game not found.\");\n        } else {\n          resolve(id);\n        }\n      });\n    });\n  });\n}\nexport function createGame(userID, name) {\n  const gameID = uuidv4();\n  const game = {\n    creator_id: userID,\n    join_id: gameID.slice(0, 4),\n    scoreEvents: [],\n    players: [{\n      id: userID,\n      name\n    }]\n  };\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).set(game, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(_objectSpread({}, game, {\n          id: gameID\n        }));\n      }\n    });\n  });\n}\nexport function addPlayerToGame(gameID, userID, name) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).once(\"value\").then(snapshot => {\n      const game = snapshot.val();\n\n      if (!game.players.some(player => player.id === userID)) {\n        const newGame = _objectSpread({}, game, {\n          players: game.players.concat({\n            id: userID,\n            name\n          })\n        });\n\n        db(\"games/\" + gameID).update(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      }\n    });\n  });\n}\nexport function updateScore(gameID, userID, number) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).once(\"value\").then(snapshot => {\n      const game = snapshot.val();\n\n      const newGame = _objectSpread({}, game);\n\n      newGame.players = newGame.players.length > 2 ? handleThreePlayerGame(userID, newGame.players, number) : handleTwoPlayerGame(userID, newGame.players, number);\n      db(\"games/\" + gameID).set(newGame, error => {\n        if (error) {\n          console.error(\"error\", error);\n        }\n      });\n    });\n  });\n}\nexport function resetScore(gameID, userID) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).once(\"value\").then(snapshot => {\n      const game = snapshot.val();\n\n      const newGame = _objectSpread({}, game);\n\n      newGame.players = newGame.players.map(player => {\n        if (player.id !== userID) {\n          return player;\n        }\n\n        return _objectSpread({}, player, {\n          score: DEFAULT_SCORE\n        });\n      });\n      db(\"games/\" + gameID).set(newGame, error => {\n        if (error) {\n          console.error(\"error\", error);\n        }\n      });\n    });\n  });\n}\nexport function newGame(gameID) {\n  return new Promise((resolve, reject) => {\n    db(\"games/\" + gameID).once(\"value\").then(snapshot => {\n      const game = snapshot.val();\n\n      const newGame = _objectSpread({}, game);\n\n      newGame.players = newGame.players.map(player => {\n        return _objectSpread({}, player, {\n          score: DEFAULT_SCORE\n        });\n      });\n      db(\"games/\" + gameID).set(newGame, error => {\n        if (error) {\n          console.error(\"error\", error);\n        }\n      });\n    });\n  });\n}\n\nfunction handleTwoPlayerGame(userID, originalPlayers, number) {\n  let newPlayers = originalPlayers.slice();\n  newPlayers = newPlayers.map(player => {\n    if (player.id !== userID) {\n      return player;\n    }\n\n    const newPlayer = _objectSpread({}, player);\n\n    const scoreForNumber = newPlayer.score[number];\n\n    if (scoreForNumber === 3) {\n      // Update other scores\n      newPlayer.score.total += typeof number === \"string\" ? 25 : number;\n    } else {\n      newPlayer.score[number] = scoreForNumber + 1;\n    }\n\n    return _objectSpread({}, newPlayer);\n  });\n  return newPlayers;\n}\n\nfunction handleThreePlayerGame(userID, originalPlayers, number) {\n  let newPlayers = originalPlayers.slice();\n  const amAddingToOtherPlayers = newPlayers.some(player => {\n    if (player.id === userID && player.score[number] === 3) {\n      return true;\n    }\n  });\n\n  if (amAddingToOtherPlayers) {\n    newPlayers = newPlayers.map(player => {\n      const newPlayer = _objectSpread({}, player);\n\n      if (newPlayer.score[number] !== 3 && newPlayer.id !== userID) {\n        newPlayer.score.total += typeof number === \"string\" ? 25 : number;\n      }\n\n      return _objectSpread({}, newPlayer);\n    });\n  } else {\n    newPlayers = newPlayers.map(player => {\n      if (player.id !== userID) {\n        return player;\n      }\n\n      const newPlayer = _objectSpread({}, player);\n\n      const scoreForNumber = newPlayer.score[number];\n      newPlayer.score[number] = scoreForNumber + 1;\n      return _objectSpread({}, newPlayer);\n    });\n  }\n\n  return newPlayers;\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/api/firebase.ts"],"names":["v4","uuidv4","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","database","db","ref","createUser","userID","user","created_at","Date","now","Promise","resolve","reject","set","error","id","getUser","once","then","snapshot","val","getGame","gameID","onUpdate","on","game","getGameId","join_id","orderByChild","equalTo","forEach","data","key","createGame","name","creator_id","slice","scoreEvents","players","addPlayerToGame","some","player","newGame","concat","update","console","updateScore","number","handleThreePlayerGame","handleTwoPlayerGame","resetScore","map","score","DEFAULT_SCORE","originalPlayers","newPlayers","newPlayer","scoreForNumber","total","amAddingToOtherPlayers"],"mappings":"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","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyDp01-0TwxRjNC05CuDcpauXRyLSMv0RRw\",\n  authDomain: \"darts-yeslab.firebaseapp.com\",\n  databaseURL: \"https://darts-yeslab.firebaseio.com\",\n  projectId: \"darts-yeslab\",\n  storageBucket: \"darts-yeslab.appspot.com\",\n  messagingSenderId: \"426404952698\",\n  appId: \"1:426404952698:web:738ac9ab1342a1177419c3\",\n  measurementId: \"G-7DHLMBZXEN\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n}\n\nconst database = firebase.database();\n\nfunction db(ref: string) {\n  return database.ref(`/v1/${ref}`);\n}\n\nfunction createUser(userID): Promise<User> {\n  const user = {\n    created_at: Date.now()\n  };\n\n  return new Promise((resolve, reject) => {\n    db(\"users/\" + userID).set(user, error => {\n      if (error) {\n        reject(error);\n      }\n\n      resolve({ ...user, id: userID });\n    });\n  });\n}\n\nexport function getUser(userID: string): Promise<User> {\n  return db(`users/${userID}`)\n    .once(\"value\")\n    .then(function(snapshot) {\n      const user = snapshot.val();\n      if (user) {\n        return { ...user, id: userID };\n      }\n\n      return createUser(userID);\n    });\n}\n\nexport function getGame(\n  gameID: string,\n  userID: string,\n  onUpdate: any\n): Promise<Game> {\n  return new Promise((resolve, reject) => {\n    db(`/games/${gameID}`).on(\"value\", snapshot => {\n      const game = snapshot.val();\n      onUpdate(game);\n    });\n  });\n}\n\nexport function getGameId(join_id: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    db(\"games\")\n      .orderByChild(\"join_id\")\n      .equalTo(join_id)\n      .on(\"value\", function(snapshot) {\n        snapshot.forEach(function(data) {\n          const id = data.key;\n          if (!id) {\n            reject(\"Game not found.\");\n          } else {\n            resolve(id);\n          }\n        });\n      });\n  });\n}\n\nexport function createGame(userID, name): Promise<Game> {\n  const gameID = uuidv4();\n\n  const game: GameLessID = {\n    creator_id: userID,\n    join_id: gameID.slice(0, 4),\n    scoreEvents: [],\n    players: [\n      {\n        id: userID,\n        name\n      }\n    ]\n  };\n\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`).set(game, error => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve({ ...game, id: gameID });\n      }\n    });\n  });\n}\n\nexport function addPlayerToGame(gameID, userID, name) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n\n        if (!game.players.some(player => player.id === userID)) {\n          const newGame = {\n            ...game,\n            players: game.players.concat({\n              id: userID,\n              name\n            })\n          };\n\n          db(\"games/\" + gameID).update(newGame, error => {\n            if (error) {\n              console.error(\"error\", error);\n            }\n          });\n        }\n      });\n  });\n}\n\nexport function updateScore(gameID, userID, number) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n\n        const newGame = { ...game };\n        newGame.players =\n          newGame.players.length > 2\n            ? handleThreePlayerGame(userID, newGame.players, number)\n            : handleTwoPlayerGame(userID, newGame.players, number);\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n\nexport function resetScore(gameID, userID) {\n  return new Promise((resolve, reject) => {\n    db(`games/${gameID}`)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n\n        const newGame = { ...game };\n        newGame.players = newGame.players.map(player => {\n          if (player.id !== userID) {\n            return player;\n          }\n\n          return { ...player, score: DEFAULT_SCORE };\n        });\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n\nexport function newGame(gameID) {\n  return new Promise((resolve, reject) => {\n    db(\"games/\" + gameID)\n      .once(\"value\")\n      .then(snapshot => {\n        const game = snapshot.val();\n\n        const newGame = { ...game };\n        newGame.players = newGame.players.map(player => {\n          return { ...player, score: DEFAULT_SCORE };\n        });\n\n        db(\"games/\" + gameID).set(newGame, error => {\n          if (error) {\n            console.error(\"error\", error);\n          }\n        });\n      });\n  });\n}\n\nfunction handleTwoPlayerGame(\n  userID: string,\n  originalPlayers: Array<Player>,\n  number: string | number\n) {\n  let newPlayers = originalPlayers.slice();\n\n  newPlayers = newPlayers.map(player => {\n    if (player.id !== userID) {\n      return player;\n    }\n\n    const newPlayer = { ...player };\n    const scoreForNumber = newPlayer.score[number];\n    if (scoreForNumber === 3) {\n      // Update other scores\n      newPlayer.score.total += typeof number === \"string\" ? 25 : number;\n    } else {\n      newPlayer.score[number] = scoreForNumber + 1;\n    }\n\n    return { ...newPlayer };\n  });\n\n  return newPlayers;\n}\n\nfunction handleThreePlayerGame(\n  userID: string,\n  originalPlayers: Array<Player>,\n  number: string | number\n) {\n  let newPlayers = originalPlayers.slice();\n  const amAddingToOtherPlayers = newPlayers.some(player => {\n    if (player.id === userID && player.score[number] === 3) {\n      return true;\n    }\n  });\n\n  if (amAddingToOtherPlayers) {\n    newPlayers = newPlayers.map(player => {\n      const newPlayer = { ...player };\n      if (newPlayer.score[number] !== 3 && newPlayer.id !== userID) {\n        newPlayer.score.total += typeof number === \"string\" ? 25 : number;\n      }\n      return { ...newPlayer };\n    });\n  } else {\n    newPlayers = newPlayers.map(player => {\n      if (player.id !== userID) {\n        return player;\n      }\n\n      const newPlayer = { ...player };\n      const scoreForNumber = newPlayer.score[number];\n      newPlayer.score[number] = scoreForNumber + 1;\n\n      return { ...newPlayer };\n    });\n  }\n\n  return newPlayers;\n}\n"]},"metadata":{},"sourceType":"module"}