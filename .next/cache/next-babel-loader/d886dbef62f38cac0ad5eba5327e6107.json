{"ast":null,"code":"import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUser } from \"./user\";\nconst GAME_ID = \"game_id\";\nexport function useGetGame() {\n  const [user] = useGetUser();\n  console.log(\"user\", user);\n  const [gameID, setgameID] = React.useState();\n  const [game, setGame] = React.useState();\n  const [error, setError] = React.useState();\n  const userID = user && user.id;\n  React.useEffect(() => {\n    const gameIDCookie = Cookies.get(GAME_ID);\n\n    if (gameIDCookie) {\n      setgameID(gameIDCookie);\n    } else {\n      const newId = uuidv4();\n      Cookies.set(GAME_ID, newId, {\n        expires: 365\n      });\n      setgameID(newId);\n    }\n  }, []);\n  React.useEffect(() => {\n    if (gameID && userID) {\n      getGame(gameID, userID).then(gameFromDB => {\n        console.log(\"gameFromDB\", gameFromDB);\n        setGame(gameFromDB);\n      }).catch(error => {\n        setError(error);\n      });\n    }\n  }, [gameID, userID]);\n  return [game, error];\n}\nexport function useGetGameID() {\n  const [game] = useGetGame();\n  const gameID = game && game.id;\n  return gameID;\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/effects/game.ts"],"names":["React","v4","uuidv4","Cookies","getGame","useGetUser","GAME_ID","useGetGame","user","console","log","gameID","setgameID","useState","game","setGame","error","setError","userID","id","useEffect","gameIDCookie","get","newId","set","expires","then","gameFromDB","catch","useGetGameID"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,MAAMC,OAAO,GAAG,SAAhB;AAEA,OAAO,SAASC,UAAT,GAAsC;AAC3C,QAAM,CAACC,IAAD,IAASH,UAAU,EAAzB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBZ,KAAK,CAACa,QAAN,EAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACa,QAAN,EAAxB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBjB,KAAK,CAACa,QAAN,EAA1B;AACA,QAAMK,MAAM,GAAGV,IAAI,IAAIA,IAAI,CAACW,EAA5B;AAEAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,UAAMC,YAAY,GAAGlB,OAAO,CAACmB,GAAR,CAAYhB,OAAZ,CAArB;;AACA,QAAIe,YAAJ,EAAkB;AAChBT,MAAAA,SAAS,CAACS,YAAD,CAAT;AACD,KAFD,MAEO;AACL,YAAME,KAAK,GAAGrB,MAAM,EAApB;AACAC,MAAAA,OAAO,CAACqB,GAAR,CAAYlB,OAAZ,EAAqBiB,KAArB,EAA4B;AAC1BE,QAAAA,OAAO,EAAE;AADiB,OAA5B;AAIAb,MAAAA,SAAS,CAACW,KAAD,CAAT;AACD;AACF,GAZD,EAYG,EAZH;AAcAvB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIT,MAAM,IAAIO,MAAd,EAAsB;AACpBd,MAAAA,OAAO,CAACO,MAAD,EAASO,MAAT,CAAP,CACGQ,IADH,CACQC,UAAU,IAAI;AAClBlB,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BiB,UAA1B;AACAZ,QAAAA,OAAO,CAACY,UAAD,CAAP;AACD,OAJH,EAKGC,KALH,CAKSZ,KAAK,IAAI;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,OAPH;AAQD;AACF,GAXD,EAWG,CAACL,MAAD,EAASO,MAAT,CAXH;AAaA,SAAO,CAACJ,IAAD,EAAOE,KAAP,CAAP;AACD;AAED,OAAO,SAASa,YAAT,GAAgC;AACrC,QAAM,CAACf,IAAD,IAASP,UAAU,EAAzB;AACA,QAAMI,MAAM,GAAGG,IAAI,IAAIA,IAAI,CAACK,EAA5B;AAEA,SAAOR,MAAP;AACD","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUser } from \"./user\";\n\nconst GAME_ID = \"game_id\";\n\nexport function useGetGame(): [Game, Error?] {\n  const [user] = useGetUser();\n  console.log(\"user\", user);\n  const [gameID, setgameID] = React.useState<string>();\n  const [game, setGame] = React.useState<Game>();\n  const [error, setError] = React.useState<Error>();\n  const userID = user && user.id;\n\n  React.useEffect(() => {\n    const gameIDCookie = Cookies.get(GAME_ID);\n    if (gameIDCookie) {\n      setgameID(gameIDCookie);\n    } else {\n      const newId = uuidv4();\n      Cookies.set(GAME_ID, newId, {\n        expires: 365\n      });\n\n      setgameID(newId);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (gameID && userID) {\n      getGame(gameID, userID)\n        .then(gameFromDB => {\n          console.log(\"gameFromDB\", gameFromDB);\n          setGame(gameFromDB);\n        })\n        .catch(error => {\n          setError(error);\n        });\n    }\n  }, [gameID, userID]);\n\n  return [game, error];\n}\n\nexport function useGetGameID(): string {\n  const [game] = useGetGame();\n  const gameID = game && game.id;\n\n  return gameID;\n}\n"]},"metadata":{},"sourceType":"module"}