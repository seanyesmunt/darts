{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore } from \"../api/firebase\";\n\nfunction ScoreRow(props) {\n  const {\n    number,\n    score,\n    gameID,\n    playerID\n  } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore(newScore) {\n    updateScore(gameID, userID, number, newScore);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: () => handleUpdateScore(score + 1),\n    className: classnames(\"flex-1 text-white ont-bold w-100\", {\n      \"bg-teal-600 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, score === 0 ? \"\" : score));\n}\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID\n  } = props;\n  const userID = useGetUserID();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(ScoreBoard, {\n    players: players,\n    gameID: gameID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction ScoreBoard(props) {\n  const {\n    players,\n    gameID\n  } = props;\n  const userID = useGetUserID();\n  return __jsx(\"div\", {\n    className: \"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"score__column flex flex-col justify-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, [\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n    return __jsx(\"div\", {\n      className: \"score__item px-2 flex items-center justify-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, value));\n  })), players.map(({\n    id,\n    name,\n    score\n  }) => {\n    const isMine = id === userID;\n    return __jsx(\"div\", {\n      className: \"score__column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: classnames(\"score__item text-center border-gray-400 p-5\", {\n        \"bg-teal-600\": isMine\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, name), Object.keys(score).sort((a, b) => {\n      if (a === \"bull\") {\n        return 1;\n      } else if (b === \"bull\") {\n        return -1;\n      } else {\n        const numberA = Number(a);\n        const numberB = Number(b);\n        return numberB - numberA;\n      }\n    }).map(number => {\n      const scoreForNumber = score[number];\n      return __jsx(ScoreRow, {\n        key: number,\n        number: number,\n        score: scoreForNumber,\n        playerID: id,\n        gameID: gameID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      });\n    }));\n  })));\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateScore","ScoreRow","props","number","score","gameID","playerID","userID","isMine","handleUpdateScore","newScore","Game","join_id","players","id","ScoreBoard","map","value","name","Object","keys","sort","a","b","numberA","Number","numberB","scoreForNumber"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore } from \"../api/firebase\";\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore(newScore) {\n    updateScore(gameID, userID, number, newScore);\n  }\n\n  return (\n    <div className=\"score__item flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleUpdateScore(score + 1)}\n        className={classnames(\"flex-1 text-white ont-bold w-100\", {\n          \"bg-teal-600 hover:bg-teal-500\": isMine\n        })}\n      >\n        {score === 0 ? \"\" : score}\n      </button>\n    </div>\n  );\n}\n\nexport default function Game(props) {\n  const { join_id, players, id: gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div>\n      <ScoreBoard players={players} gameID={gameID} />\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div className=\"chalkboard mt-10 bg-teal-700 mx-2 chalk text-white border-b-8 shadow-xl\">\n      <div className=\"flex\">\n        <div className=\"score__column flex flex-col justify-center align-center\">\n          {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map(value => {\n            return (\n              <div className=\"score__item px-2 flex items-center justify-center\">\n                <span>{value}</span>\n              </div>\n            );\n          })}\n        </div>\n        {players.map(({ id, name, score }) => {\n          const isMine = id === userID;\n          return (\n            <div className=\"score__column\">\n              <div\n                className={classnames(\n                  \"score__item text-center border-gray-400 p-5\",\n                  {\n                    \"bg-teal-600\": isMine\n                  }\n                )}\n              >\n                {name}\n              </div>\n              {Object.keys(score)\n                .sort((a, b) => {\n                  if (a === \"bull\") {\n                    return 1;\n                  } else if (b === \"bull\") {\n                    return -1;\n                  } else {\n                    const numberA = Number(a);\n                    const numberB = Number(b);\n                    return numberB - numberA;\n                  }\n                })\n                .map(number => {\n                  const scoreForNumber = score[number];\n                  return (\n                    <ScoreRow\n                      key={number}\n                      number={number}\n                      score={scoreForNumber}\n                      playerID={id}\n                      gameID={gameID}\n                    />\n                  );\n                })}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}