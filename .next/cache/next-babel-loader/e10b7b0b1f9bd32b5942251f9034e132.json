{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUserID } from \"./user\";\nvar GAME_ID = \"game_id\";\nexport function useGetGame(gameIDFromUrl, options) {\n  var userID = useGetUserID();\n\n  var _React$useState = React.useState(gameIDFromUrl),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      gameID = _React$useState2[0],\n      setgameID = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      game = _React$useState4[0],\n      setGame = _React$useState4[1];\n\n  var _React$useState5 = React.useState(),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      error = _React$useState6[0],\n      setError = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (gameIDFromUrl) {\n      setgameID(gameIDFromUrl);\n      Cookies.set(GAME_ID, gameIDFromUrl, {\n        expires: 365\n      });\n      setgameID(gameIDFromUrl);\n    } else {\n      var gameIDCookie = Cookies.get(GAME_ID);\n\n      if (gameIDCookie) {\n        setgameID(gameIDCookie);\n      } else {\n        var newId = uuidv4();\n        Cookies.set(GAME_ID, newId, {\n          expires: 365\n        });\n        setgameID(newId);\n      }\n    }\n  }, [gameIDFromUrl]);\n  React.useEffect(function () {\n    function onUpdate(value) {\n      setGame(_objectSpread({}, value, {\n        id: gameID\n      }));\n    }\n\n    if (gameID && userID) {\n      getGame(gameID, userID, options, onUpdate);\n    }\n  }, [gameID, userID]);\n  return [game, error];\n}\nexport function useGetGameID(_ref) {\n  var options = _ref.options;\n\n  var _useGetGame = useGetGame(undefined, options),\n      _useGetGame2 = _slicedToArray(_useGetGame, 1),\n      game = _useGetGame2[0];\n\n  var gameID = game && game.id;\n  return gameID;\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/effects/game.ts"],"names":["React","v4","uuidv4","Cookies","getGame","useGetUserID","GAME_ID","useGetGame","gameIDFromUrl","options","userID","useState","gameID","setgameID","game","setGame","error","setError","useEffect","set","expires","gameIDCookie","get","newId","onUpdate","value","id","useGetGameID","undefined"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,QAA7B;AAEA,IAAMC,OAAO,GAAG,SAAhB;AAEA,OAAO,SAASC,UAAT,CAAoBC,aAApB,EAAmCC,OAAnC,EAA4D;AACjE,MAAMC,MAAM,GAAGL,YAAY,EAA3B;;AADiE,wBAErCL,KAAK,CAACW,QAAN,CAAuBH,aAAvB,CAFqC;AAAA;AAAA,MAE1DI,MAF0D;AAAA,MAElDC,SAFkD;;AAAA,yBAGzCb,KAAK,CAACW,QAAN,EAHyC;AAAA;AAAA,MAG1DG,IAH0D;AAAA,MAGpDC,OAHoD;;AAAA,yBAIvCf,KAAK,CAACW,QAAN,EAJuC;AAAA;AAAA,MAI1DK,KAJ0D;AAAA,MAInDC,QAJmD;;AAMjEjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,QAAIV,aAAJ,EAAmB;AACjBK,MAAAA,SAAS,CAACL,aAAD,CAAT;AACAL,MAAAA,OAAO,CAACgB,GAAR,CAAYb,OAAZ,EAAqBE,aAArB,EAAoC;AAClCY,QAAAA,OAAO,EAAE;AADyB,OAApC;AAIAP,MAAAA,SAAS,CAACL,aAAD,CAAT;AACD,KAPD,MAOO;AACL,UAAMa,YAAY,GAAGlB,OAAO,CAACmB,GAAR,CAAYhB,OAAZ,CAArB;;AACA,UAAIe,YAAJ,EAAkB;AAChBR,QAAAA,SAAS,CAACQ,YAAD,CAAT;AACD,OAFD,MAEO;AACL,YAAME,KAAK,GAAGrB,MAAM,EAApB;AACAC,QAAAA,OAAO,CAACgB,GAAR,CAAYb,OAAZ,EAAqBiB,KAArB,EAA4B;AAC1BH,UAAAA,OAAO,EAAE;AADiB,SAA5B;AAIAP,QAAAA,SAAS,CAACU,KAAD,CAAT;AACD;AACF;AACF,GArBD,EAqBG,CAACf,aAAD,CArBH;AAuBAR,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAM;AACpB,aAASM,QAAT,CAAkBC,KAAlB,EAAyB;AACvBV,MAAAA,OAAO,mBAAMU,KAAN;AAAaC,QAAAA,EAAE,EAAEd;AAAjB,SAAP;AACD;;AAED,QAAIA,MAAM,IAAIF,MAAd,EAAsB;AACpBN,MAAAA,OAAO,CAACQ,MAAD,EAASF,MAAT,EAAiBD,OAAjB,EAA0Be,QAA1B,CAAP;AACD;AACF,GARD,EAQG,CAACZ,MAAD,EAASF,MAAT,CARH;AAUA,SAAO,CAACI,IAAD,EAAOE,KAAP,CAAP;AACD;AAED,OAAO,SAASW,YAAT,OAA2C;AAAA,MAAnBlB,OAAmB,QAAnBA,OAAmB;;AAAA,oBACjCF,UAAU,CAACqB,SAAD,EAAYnB,OAAZ,CADuB;AAAA;AAAA,MACzCK,IADyC;;AAEhD,MAAMF,MAAM,GAAGE,IAAI,IAAIA,IAAI,CAACY,EAA5B;AAEA,SAAOd,MAAP;AACD","sourcesContent":["import React from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Cookies from \"js-cookie\";\nimport { getGame } from \"../api/firebase\";\nimport { useGetUserID } from \"./user\";\n\nconst GAME_ID = \"game_id\";\n\nexport function useGetGame(gameIDFromUrl, options): [Game, Error?] {\n  const userID = useGetUserID();\n  const [gameID, setgameID] = React.useState<string>(gameIDFromUrl);\n  const [game, setGame] = React.useState<Game>();\n  const [error, setError] = React.useState<Error>();\n\n  React.useEffect(() => {\n    if (gameIDFromUrl) {\n      setgameID(gameIDFromUrl);\n      Cookies.set(GAME_ID, gameIDFromUrl, {\n        expires: 365\n      });\n\n      setgameID(gameIDFromUrl);\n    } else {\n      const gameIDCookie = Cookies.get(GAME_ID);\n      if (gameIDCookie) {\n        setgameID(gameIDCookie);\n      } else {\n        const newId = uuidv4();\n        Cookies.set(GAME_ID, newId, {\n          expires: 365\n        });\n\n        setgameID(newId);\n      }\n    }\n  }, [gameIDFromUrl]);\n\n  React.useEffect(() => {\n    function onUpdate(value) {\n      setGame({ ...value, id: gameID });\n    }\n\n    if (gameID && userID) {\n      getGame(gameID, userID, options, onUpdate);\n    }\n  }, [gameID, userID]);\n\n  return [game, error];\n}\n\nexport function useGetGameID({ options }): string {\n  const [game] = useGetGame(undefined, options);\n  const gameID = game && game.id;\n\n  return gameID;\n}\n"]},"metadata":{},"sourceType":"module"}