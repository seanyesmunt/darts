{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateGameScore, resetScore, newGame } from \"../api/firebase\"; // 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  var join_id = props.join_id,\n      players = props.players,\n      gameID = props.id,\n      creator_id = props.creator_id,\n      _props$score_events = props.score_events,\n      scoreEvents = _props$score_events === void 0 ? [] : _props$score_events;\n  var userID = useGetUserID(); // Initialize score object based on how many players there are\n\n  var score = players.reduce(function (scoreObject, player) {\n    return _objectSpread({}, scoreObject, _defineProperty({}, player.id, {\n      20: 0,\n      19: 0,\n      15: 0,\n      18: 0,\n      17: 0,\n      16: 0,\n      25: 0,\n      total: 0\n    }));\n  }, {}); // For each `score_event`, update the score for everyone\n\n  scoreEvents.forEach(function (scoreEvent) {\n    if (!userID) {\n      return;\n    }\n\n    var scoreEventUserID = scoreEvent.user_id,\n        hitValue = scoreEvent.hit_value;\n    var usersScoreForHitValue = score[scoreEventUserID][hitValue];\n\n    if (usersScoreForHitValue < 3) {\n      score[scoreEventUserID][hitValue] += 1;\n    } else {\n      if (players.length > 2) {\n        // Add score to other players that don't have hitValue closed out\n        players.forEach(function (player) {\n          var wasMyHit = player.id === scoreEventUserID;\n\n          if (wasMyHit) {\n            score[player.id] += hitValue;\n          }\n        });\n      } else {\n        // Add score to my score if players that don't have hitValue closed out\n        players.forEach(function (player) {\n          var isOtherPlayer = player.id !== scoreEventUserID;\n          var playersScoreForHitValue = score[player.id][hitValue];\n\n          if (isOtherPlayer && playersScoreForHitValue < 3) {\n            score[userID].total += hitValue;\n          }\n        });\n      }\n    }\n  });\n\n  var _Object$values$reduce = Object.values(score).reduce(function (acc, score) {\n    var _acc = _slicedToArray(acc, 2),\n        currentHighest = _acc[0],\n        currentLowest = _acc[1];\n\n    var newHighest;\n    var newLowest;\n\n    if (score.total > currentHighest) {\n      newHighest = score.total;\n    }\n\n    if (score.total < currentLowest) {\n      newLowest = score.total;\n    }\n\n    return [newHighest !== undefined ? currentHighest : 0, newLowest !== undefined ? newLowest : currentLowest];\n  }, [0, Infinity]),\n      _Object$values$reduce2 = _slicedToArray(_Object$values$reduce, 2),\n      highestScore = _Object$values$reduce2[0],\n      lowestScore = _Object$values$reduce2[1];\n\n  var creator = players.find(function (player) {\n    return player.id === creator_id;\n  });\n  var hasWinner = false;\n  var winnerName;\n  Object.keys(score).forEach(function (userID) {\n    var scoreForUserID = score[userID];\n    var hasClosedOutBoard = scoreForUserID[15] === 3 && scoreForUserID[16] === 3 && scoreForUserID[17] === 3 && scoreForUserID[18] === 3 && scoreForUserID[19] === 3 && scoreForUserID[20] === 3 && scoreForUserID[25] === 3;\n\n    if (hasClosedOutBoard) {\n      if (players.length < 3) {\n        var isHightest = scoreForUserID.total === highestScore;\n\n        if (isHightest) {\n          hasWinner = true;\n          var player = players.find(function (player) {\n            return player.id === userID;\n          });\n          winnerName = player.name;\n        }\n      } else {\n        var isLowest = scoreForUserID.total === lowestScore;\n\n        if (isLowest) {\n          hasWinner = true;\n\n          var _player = players.find(function (player) {\n            return player.id === userID;\n          });\n\n          winnerName = _player.name;\n        }\n      }\n    }\n  });\n  return hasWinner ? __jsx(\"div\", {\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/winner.png\",\n    className: \"w-full max-w-md md:mt-8 px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    className: \"chalk text-6xl px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Nice one \", winnerName, \"!\"), __jsx(\"div\", {\n    className: \"px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, creator && creator.id === userID ? __jsx(\"button\", {\n    className: \"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\",\n    onClick: function onClick() {\n      return newGame(gameID);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"New Game\") : __jsx(\"div\", {\n    className: \"text-sm my-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, \"Waiting for the host to start the another game...\"))) : __jsx(\"div\", {\n    className: \"flex-col overflow-x-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }, __jsx(ScoreBoard, {\n    score: score,\n    gameID: gameID,\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: \"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\",\n    onClick: function onClick() {\n      return resetScore(gameID, userID);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, \"Reset Score\"));\n}\n\nfunction ScoreBoard(props) {\n  var _this = this;\n\n  var players = props.players,\n      gameID = props.gameID,\n      score = props.score;\n  var userID = useGetUserID();\n  return __jsx(\"div\", {\n    className: \"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"score__column flex flex-col justify-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 11\n    }\n  }, [\"\", 20, 19, 18, 17, 16, 15, 25].map(function (value, index) {\n    var _jsx;\n\n    return __jsx(\"div\", {\n      key: value,\n      className: \"score__item h-16 \".concat(index === 0 ? \"h-24\" : \"\", \" md:h-24 px-4 flex items-center justify-center\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, value === \"\" ? __jsx(SVG, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, __jsx(\"circle\", {\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      className: \"bg-teal-700\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }), __jsx(\"path\", (_jsx = {\n      className: \"bg-white\"\n    }, _defineProperty(_jsx, \"className\", \"refresh__icon\"), _defineProperty(_jsx, \"d\", \"M8.52 7.11a5.98 5.98 0 0 1 8.98 2.5 1 1 0 1 1-1.83.8 4 4 0 0 0-5.7-1.86l.74.74A1 1 0 0 1 10 11H7a1 1 0 0 1-1-1V7a1 1 0 0 1 1.7-.7l.82.81zm5.51 8.34l-.74-.74A1 1 0 0 1 14 13h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1.7.7l-.82-.81A5.98 5.98 0 0 1 6.5 14.4a1 1 0 1 1 1.83-.8 4 4 0 0 0 5.7 1.85z\"), _defineProperty(_jsx, \"__self\", _this), _defineProperty(_jsx, \"__source\", {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }), _jsx))) : value));\n  })), Object.keys(score).map(function (userIDForScore) {\n    var player = players.find(function (player) {\n      return player.id === userIDForScore;\n    });\n    var userScore = score[userIDForScore];\n    var isMine = userIDForScore === userID;\n    return __jsx(\"div\", {\n      key: userIDForScore,\n      className: \"score__column\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classnames(\"score__item h-24 md:h-24 w-24 text-center pt-2 \", {\n        \"bg-teal-700\": isMine\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"text-lg md:text-md text-gray-300\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 19\n      }\n    }, player.name), __jsx(\"div\", {\n      className: \"text-4xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, userScore.total)), [20, 19, 18, 17, 16, 15, 25].map(function (number) {\n      return __jsx(ScoreRow, {\n        key: number,\n        number: number,\n        score: score[userIDForScore][number],\n        playerID: userIDForScore,\n        gameID: gameID,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }\n      });\n    }));\n  }))));\n}\n\nfunction ScoreRow(props) {\n  var number = props.number,\n      score = props.score,\n      gameID = props.gameID,\n      playerID = props.playerID;\n  var userID = useGetUserID();\n  var isMine = playerID === userID;\n\n  function handleupdateGameScore() {\n    updateGameScore(gameID, userID, number);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item h-16 md:h-24 flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: function onClick() {\n      return handleupdateGameScore();\n    },\n    className: classnames(\"flex-1 flex align-center justify-center text-white ont-bold w-100\", {\n      \"bg-teal-700 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }, score === 1 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  })), score === 2 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }\n  })), score > 2 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction SVG(props) {\n  var children = props.children,\n      rest = _objectWithoutProperties(props, [\"children\"]);\n\n  return __jsx(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 48,\n    height: 48,\n    fill: \"none\",\n    stroke: \"white\",\n    strokeWidth: \"1\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }), children);\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateGameScore","resetScore","newGame","Game","props","join_id","players","gameID","id","creator_id","score_events","scoreEvents","userID","score","reduce","scoreObject","player","total","forEach","scoreEvent","scoreEventUserID","user_id","hitValue","hit_value","usersScoreForHitValue","length","wasMyHit","isOtherPlayer","playersScoreForHitValue","Object","values","acc","currentHighest","currentLowest","newHighest","newLowest","undefined","Infinity","highestScore","lowestScore","creator","find","hasWinner","winnerName","keys","scoreForUserID","hasClosedOutBoard","isHightest","name","isLowest","ScoreBoard","map","value","index","userIDForScore","userScore","isMine","number","ScoreRow","playerID","handleupdateGameScore","SVG","children","rest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateGameScore, resetScore, newGame } from \"../api/firebase\";\n\n// 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID,\n    creator_id,\n    score_events: scoreEvents = []\n  } = props;\n  const userID = useGetUserID();\n\n  // Initialize score object based on how many players there are\n  let score: Score = players.reduce((scoreObject, player) => {\n    return {\n      ...scoreObject,\n      [player.id]: {\n        20: 0,\n        19: 0,\n        15: 0,\n        18: 0,\n        17: 0,\n        16: 0,\n        25: 0,\n        total: 0\n      }\n    };\n  }, {});\n\n  // For each `score_event`, update the score for everyone\n  scoreEvents.forEach((scoreEvent: ScoreEvent) => {\n    if (!userID) {\n      return;\n    }\n\n    const { user_id: scoreEventUserID, hit_value: hitValue } = scoreEvent;\n\n    const usersScoreForHitValue = score[scoreEventUserID][hitValue];\n    if (usersScoreForHitValue < 3) {\n      score[scoreEventUserID][hitValue] += 1;\n    } else {\n      if (players.length > 2) {\n        // Add score to other players that don't have hitValue closed out\n        players.forEach((player: Player) => {\n          const wasMyHit = player.id === scoreEventUserID;\n          if (wasMyHit) {\n            score[player.id] += hitValue;\n          }\n        });\n      } else {\n        // Add score to my score if players that don't have hitValue closed out\n        players.forEach((player: Player) => {\n          const isOtherPlayer = player.id !== scoreEventUserID;\n          const playersScoreForHitValue = score[player.id][hitValue];\n\n          if (isOtherPlayer && playersScoreForHitValue < 3) {\n            score[userID].total += hitValue;\n          }\n        });\n      }\n    }\n  });\n\n  const [highestScore, lowestScore] = Object.values(score).reduce(\n    (acc: [number, number], score: Score) => {\n      const [currentHighest, currentLowest] = acc;\n      let newHighest: number;\n      let newLowest: number;\n\n      if (score.total > currentHighest) {\n        newHighest = score.total;\n      }\n\n      if (score.total < currentLowest) {\n        newLowest = score.total;\n      }\n\n      return [\n        newHighest !== undefined ? currentHighest : 0,\n        newLowest !== undefined ? newLowest : currentLowest\n      ];\n    },\n    [0, Infinity]\n  );\n\n  const creator = players.find(player => player.id === creator_id);\n\n  let hasWinner = false;\n  let winnerName: string;\n\n  Object.keys(score).forEach(userID => {\n    const scoreForUserID = score[userID];\n    const hasClosedOutBoard =\n      scoreForUserID[15] === 3 &&\n      scoreForUserID[16] === 3 &&\n      scoreForUserID[17] === 3 &&\n      scoreForUserID[18] === 3 &&\n      scoreForUserID[19] === 3 &&\n      scoreForUserID[20] === 3 &&\n      scoreForUserID[25] === 3;\n\n    if (hasClosedOutBoard) {\n      if (players.length < 3) {\n        const isHightest = scoreForUserID.total === highestScore;\n        if (isHightest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      } else {\n        const isLowest = scoreForUserID.total === lowestScore;\n        if (isLowest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      }\n    }\n  });\n\n  return hasWinner ? (\n    <div className=\"mx-auto\">\n      <img src=\"/winner.png\" className=\"w-full max-w-md md:mt-8 px-8\" />\n      <h1 className=\"chalk text-6xl px-8\">Nice one {winnerName}!</h1>\n\n      <div className=\"px-8\">\n        {creator && creator.id === userID ? (\n          <button\n            className=\"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\"\n            onClick={() => newGame(gameID)}\n          >\n            New Game\n          </button>\n        ) : (\n          <div className=\"text-sm my-16\">\n            Waiting for the host to start the another game...\n          </div>\n        )}\n      </div>\n    </div>\n  ) : (\n    <div className=\"flex-col overflow-x-scroll\">\n      <ScoreBoard score={score} gameID={gameID} players={players} />\n      <button\n        className=\"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\"\n        onClick={() => resetScore(gameID, userID)}\n      >\n        Reset Score\n      </button>\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID, score } = props;\n  const userID = useGetUserID();\n\n  return (\n    <div className=\"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\">\n      <div className=\"text-white\">\n        <div className=\"flex\">\n          <div className=\"score__column flex flex-col justify-center align-center\">\n            {[\"\", 20, 19, 18, 17, 16, 15, 25].map((value, index) => {\n              return (\n                <div\n                  key={value}\n                  className={`score__item h-16 ${\n                    index === 0 ? \"h-24\" : \"\"\n                  } md:h-24 px-4 flex items-center justify-center`}\n                >\n                  <span>\n                    {value === \"\" ? (\n                      <SVG>\n                        <circle\n                          cx=\"12\"\n                          cy=\"12\"\n                          r=\"10\"\n                          className=\"bg-teal-700\"\n                        />\n                        <path\n                          className=\"bg-white\"\n                          className=\"refresh__icon\"\n                          d=\"M8.52 7.11a5.98 5.98 0 0 1 8.98 2.5 1 1 0 1 1-1.83.8 4 4 0 0 0-5.7-1.86l.74.74A1 1 0 0 1 10 11H7a1 1 0 0 1-1-1V7a1 1 0 0 1 1.7-.7l.82.81zm5.51 8.34l-.74-.74A1 1 0 0 1 14 13h3a1 1 0 0 1 1 1v3a1 1 0 0 1-1.7.7l-.82-.81A5.98 5.98 0 0 1 6.5 14.4a1 1 0 1 1 1.83-.8 4 4 0 0 0 5.7 1.85z\"\n                        />\n                      </SVG>\n                    ) : (\n                      value\n                    )}\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n          {Object.keys(score).map(userIDForScore => {\n            const player = players.find(player => player.id === userIDForScore);\n            const userScore = score[userIDForScore];\n            const isMine = userIDForScore === userID;\n            return (\n              <div key={userIDForScore} className=\"score__column\">\n                <div\n                  className={classnames(\n                    \"score__item h-24 md:h-24 w-24 text-center pt-2 \",\n                    {\n                      \"bg-teal-700\": isMine\n                    }\n                  )}\n                >\n                  <div className=\"text-lg md:text-md text-gray-300\">\n                    {player.name}\n                  </div>\n                  <div className=\"text-4xl\">{userScore.total}</div>\n                </div>\n                {[20, 19, 18, 17, 16, 15, 25].map(number => {\n                  return (\n                    <ScoreRow\n                      key={number}\n                      number={number}\n                      score={score[userIDForScore][number]}\n                      playerID={userIDForScore}\n                      gameID={gameID}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleupdateGameScore() {\n    updateGameScore(gameID, userID, number);\n  }\n\n  return (\n    <div className=\"score__item h-16 md:h-24 flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleupdateGameScore()}\n        className={classnames(\n          \"flex-1 flex align-center justify-center text-white ont-bold w-100\",\n          {\n            \"bg-teal-700 hover:bg-teal-500\": isMine\n          }\n        )}\n      >\n        {score === 1 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n          </SVG>\n        )}\n        {score === 2 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n        {score > 2 && (\n          <SVG>\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n      </button>\n    </div>\n  );\n}\n\nfunction SVG(props) {\n  const { children, ...rest } = props;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={48}\n      height={48}\n      fill=\"none\"\n      stroke=\"white\"\n      strokeWidth=\"1\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...rest}\n    >\n      {children}\n    </svg>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}