{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from \"firebase/app\";\nimport \"firebase/database\";\nvar config = {\n  apiKey: \"AIzaSyDp01-0TwxRjNC05CuDcpauXRyLSMv0RRw\",\n  authDomain: \"darts-yeslab.firebaseapp.com\",\n  databaseURL: \"https://darts-yeslab.firebaseio.com\",\n  projectId: \"darts-yeslab\",\n  storageBucket: \"darts-yeslab.appspot.com\",\n  messagingSenderId: \"426404952698\",\n  appId: \"1:426404952698:web:738ac9ab1342a1177419c3\",\n  measurementId: \"G-7DHLMBZXEN\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n  firebase.database();\n} // DB types\n\n\nexport function getUser(userID) {\n  return firebase.database().ref(\"/users/\" + userID).once(\"value\").then(function (snapshot) {\n    var user = snapshot.val();\n\n    if (user) {\n      return user;\n    }\n\n    return createUser(userID);\n  });\n}\n\nfunction createUser(userID) {\n  console.log(\"createUser\");\n  var user = {};\n  return new Promise(function (resolve, reject) {\n    firebase.database().ref(\"users/\" + userID).set(user, function (error) {\n      if (error) {\n        console.log(\"error\", error);\n        reject(error);\n      }\n\n      console.log(\"GOOD!\");\n      resolve(_objectSpread({}, user, {\n        id: userID\n      }));\n    });\n  });\n}\n\nexport function getGame(gameID) {\n  return firebase.database().ref(\"/games/\" + gameID).once(\"value\").then(function (snapshot) {\n    var game = snapshot.val();\n    console.log(\"game????\", game);\n\n    if (game) {\n      return game;\n    }\n\n    return createUser(gameID);\n  });\n}\nexport function getGameId(beginningOfGameID) {\n  return new Promise(function (resolve, reject) {\n    resolve(\"\");\n  });\n}\n\nfunction createGame(gameID, userId) {\n  var game = {\n    creator_id: userId,\n    join_id: gameID.slice(0, 4)\n  };\n  return new Promise(function (resolve, reject) {\n    firebase.database().ref(\"games/\" + gameID).set(game, function (error) {\n      console.log(\"error\", errror);\n\n      if (error) {\n        reject(error);\n      }\n\n      resolve(_objectSpread({}, game, {\n        id: gameID\n      }));\n    });\n  });\n} // const data = {\n//   games: {\n//     \"one\": {\n//       creator: \"user_id\",\n//       timestamp: 000,\n//       code: \"7yzh\"\n//     },\n//     \"two\": {\n//       creator: \"user_id\",\n//       timestamp: 000,\n//       code: \"8n0a\"\n//     }\n//   }\n// }","map":{"version":3,"sources":["/Users/sean/Workspace/darts/api/firebase.ts"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","database","getUser","userID","ref","once","then","snapshot","user","val","createUser","console","log","Promise","resolve","reject","set","error","id","getGame","gameID","game","getGameId","beginningOfGameID","createGame","userId","creator_id","join_id","slice","errror"],"mappings":"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","sourcesContent":["import * as firebase from \"firebase/app\";\nimport \"firebase/database\";\n\nconst config = {\n  apiKey: \"AIzaSyDp01-0TwxRjNC05CuDcpauXRyLSMv0RRw\",\n  authDomain: \"darts-yeslab.firebaseapp.com\",\n  databaseURL: \"https://darts-yeslab.firebaseio.com\",\n  projectId: \"darts-yeslab\",\n  storageBucket: \"darts-yeslab.appspot.com\",\n  messagingSenderId: \"426404952698\",\n  appId: \"1:426404952698:web:738ac9ab1342a1177419c3\",\n  measurementId: \"G-7DHLMBZXEN\"\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(config);\n  firebase.database();\n}\n\n// DB types\ndeclare global {\n  interface User {\n    id: string;\n  }\n\n  interface Game {\n    id: string;\n    creator_id: string;\n    join_id: string;\n  }\n\n  interface Error {\n    message: string;\n  }\n}\n\nexport function getUser(userID: string): Promise<User> {\n  return firebase\n    .database()\n    .ref(\"/users/\" + userID)\n    .once(\"value\")\n    .then(function(snapshot) {\n      const user = snapshot.val();\n      if (user) {\n        return user;\n      }\n\n      return createUser(userID);\n    });\n}\n\nfunction createUser(userID): Promise<User> {\n  console.log(\"createUser\");\n  const user = {};\n\n  return new Promise((resolve, reject) => {\n    firebase\n      .database()\n      .ref(\"users/\" + userID)\n      .set(user, error => {\n        if (error) {\n          console.log(\"error\", error);\n          reject(error);\n        }\n        console.log(\"GOOD!\");\n\n        resolve({ ...user, id: userID });\n      });\n  });\n}\n\nexport function getGame(gameID: string): Promise<Game> {\n  return firebase\n    .database()\n    .ref(\"/games/\" + gameID)\n    .once(\"value\")\n    .then(function(snapshot) {\n      const game = snapshot.val();\n      console.log(\"game????\", game);\n      if (game) {\n        return game;\n      }\n\n      return createUser(gameID);\n    });\n}\n\nexport function getGameId(beginningOfGameID: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    resolve(\"\");\n  });\n}\n\nfunction createGame(gameID, userId): Promise<Game> {\n  const game = {\n    creator_id: userId,\n    join_id: gameID.slice(0, 4)\n  };\n\n  return new Promise((resolve, reject) => {\n    firebase\n      .database()\n      .ref(\"games/\" + gameID)\n      .set(game, error => {\n        console.log(\"error\", errror);\n        if (error) {\n          reject(error);\n        }\n\n        resolve({ ...game, id: gameID });\n      });\n  });\n}\n\n// const data = {\n//   games: {\n//     \"one\": {\n//       creator: \"user_id\",\n//       timestamp: 000,\n//       code: \"7yzh\"\n//     },\n//     \"two\": {\n//       creator: \"user_id\",\n//       timestamp: 000,\n//       code: \"8n0a\"\n//     }\n//   }\n\n// }\n"]},"metadata":{},"sourceType":"module"}