{"ast":null,"code":"var _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateGameScore, gameReset, newGame, gameUndoLastMove } from \"../api/firebase\";\nimport { useGetGame } from \"../effects/game\"; // 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID,\n    creator_id,\n    score_events: scoreEvents = []\n  } = props;\n  const userID = useGetUserID(); // Initialize score object based on how many players there are\n\n  let score = players.reduce((scoreObject, player) => {\n    return _objectSpread({}, scoreObject, {\n      [player.id]: {\n        20: 0,\n        19: 0,\n        15: 0,\n        18: 0,\n        17: 0,\n        16: 0,\n        25: 0,\n        total: 0\n      }\n    });\n  }, {}); // For each `score_event`, update the score for everyone\n\n  scoreEvents.forEach(scoreEvent => {\n    if (!userID) {\n      return;\n    }\n\n    const {\n      user_id: scoreEventUserID,\n      hit_value: hitValue\n    } = scoreEvent;\n    const usersScoreForHitValue = Number(score[scoreEventUserID][hitValue]);\n\n    if (usersScoreForHitValue < 3) {\n      // Something because of typescript. Not sure yet\n      if (typeof score[scoreEventUserID][hitValue] === \"number\") {\n        score[scoreEventUserID][hitValue] += 1;\n      }\n    } else {\n      // The user already closed that number out\n      // If 2 player game, add it to their own score\n      // Else, add it to the other players who haven't closed it yet's score\n      if (players.length < 3) {\n        players.forEach(player => {\n          const wasPlayersOwnHit = player.id === scoreEventUserID;\n\n          if (wasPlayersOwnHit) {\n            score[player.id] += hitValue;\n          }\n        });\n      } else {\n        // Add score to users own score if players that don't have hitValue closed out\n        players.forEach(player => {\n          const isOtherPlayer = player.id !== scoreEventUserID;\n          const playersScoreForHitValue = score[player.id][hitValue];\n\n          if (isOtherPlayer && playersScoreForHitValue < 3) {\n            score[scoreEventUserID].total += hitValue;\n          }\n        });\n      }\n    }\n  });\n  const [highestScore, lowestScore] = Object.values(score).reduce((acc, score) => {\n    const [currentHighest, currentLowest] = acc;\n    let newHighest;\n    let newLowest;\n\n    if (score.total > currentHighest) {\n      newHighest = score.total;\n    }\n\n    if (score.total < currentLowest) {\n      newLowest = score.total;\n    }\n\n    return [newHighest !== undefined ? currentHighest : 0, newLowest !== undefined ? newLowest : currentLowest];\n  }, [0, Infinity]);\n  const creator = players.find(player => player.id === creator_id);\n  let hasWinner = false;\n  let winnerName;\n  Object.keys(score).forEach(userID => {\n    const scoreForUserID = score[userID];\n    const hasClosedOutBoard = scoreForUserID[15] === 3 && scoreForUserID[16] === 3 && scoreForUserID[17] === 3 && scoreForUserID[18] === 3 && scoreForUserID[19] === 3 && scoreForUserID[20] === 3 && scoreForUserID[25] === 3;\n\n    if (hasClosedOutBoard) {\n      if (players.length < 3) {\n        const isHightest = scoreForUserID.total === highestScore;\n\n        if (isHightest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      } else {\n        const isLowest = scoreForUserID.total === lowestScore;\n\n        if (isLowest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      }\n    }\n  });\n  return hasWinner ? __jsx(\"div\", {\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/winner.png\",\n    className: \"w-full max-w-md md:mt-8 px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    className: \"chalk text-6xl px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }\n  }, \"Nice one \", winnerName, \"!\"), __jsx(\"div\", {\n    className: \"px-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, creator && creator.id === userID ? __jsx(\"button\", {\n    className: \"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\",\n    onClick: () => newGame(gameID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"New Game\") : __jsx(\"div\", {\n    className: \"text-sm my-16\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Waiting for the host to start the another game...\"))) : __jsx(\"div\", {\n    className: \"flex-col overflow-x-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, __jsx(ScoreBoard, {\n    score: score,\n    gameID: gameID,\n    players: players,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: \"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\",\n    onClick: () => gameReset(gameID, userID),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"Reset Score\"));\n}\n\nfunction ScoreBoard(props) {\n  const {\n    players,\n    gameID,\n    score\n  } = props;\n  const userID = useGetUserID();\n  const [game, error] = useGetGame(gameID);\n  return __jsx(\"div\", {\n    className: \"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"score__column flex flex-col justify-center align-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, [\"\", 20, 19, 18, 17, 16, 15, 25].map((value, index) => {\n    return __jsx(\"div\", {\n      key: value,\n      className: `score__item h-16 ${index === 0 ? \"h-24\" : \"\"} md:h-24 w-24 px-4 flex items-center justify-center`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, value === \"\" && game && game.score_events ? __jsx(\"button\", {\n      onClick: () => gameUndoLastMove(gameID),\n      className: \"bg-teal-600 hover:bg-teal-500 rounded-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, __jsx(SVG, {\n      stroke: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 25\n      }\n    }, __jsx(\"path\", {\n      stroke: \"white\",\n      d: \"M12 10h5a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5v2a1 1 0 0 1-1.7.7l-4-4a1 1 0 0 1 0-1.4l4-4A1 1 0 0 1 12 8v2z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 27\n      }\n    }))) : value));\n  })), Object.keys(score).map(userIDForScore => {\n    const player = players.find(player => player.id === userIDForScore);\n    const userScore = score[userIDForScore];\n    const isMine = userIDForScore === userID;\n    return __jsx(\"div\", {\n      key: userIDForScore,\n      className: \"score__column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, __jsx(\"div\", {\n      className: classnames(\"score__item h-24 md:h-24 w-24 text-center pt-2 \", {\n        \"bg-teal-700\": isMine\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"text-lg md:text-md text-gray-300\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 19\n      }\n    }, player.name), __jsx(\"div\", {\n      className: \"text-4xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 19\n      }\n    }, userScore.total)), [20, 19, 18, 17, 16, 15, 25].map(number => {\n      return __jsx(ScoreRow, {\n        key: number,\n        number: number,\n        score: score[userIDForScore][number],\n        playerID: userIDForScore,\n        gameID: gameID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }\n      });\n    }));\n  }))));\n}\n\nfunction ScoreRow(props) {\n  const {\n    number,\n    score,\n    gameID,\n    playerID\n  } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleupdateGameScore() {\n    updateGameScore(gameID, userID, number);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item h-16 md:h-24 flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: () => handleupdateGameScore(),\n    className: classnames(\"flex-1 flex align-center justify-center text-white ont-bold w-100\", {\n      \"bg-teal-700 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }, score === 1 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }\n  })), score === 2 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  })), score > 2 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction SVG(props) {\n  const {\n    children\n  } = props,\n        rest = _objectWithoutProperties(props, [\"children\"]);\n\n  return __jsx(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 48,\n    height: 48,\n    fill: \"none\",\n    stroke: \"white\",\n    strokeWidth: \"1\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 5\n    }\n  }), children);\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateGameScore","gameReset","newGame","gameUndoLastMove","useGetGame","Game","props","join_id","players","id","gameID","creator_id","score_events","scoreEvents","userID","score","reduce","scoreObject","player","total","forEach","scoreEvent","user_id","scoreEventUserID","hit_value","hitValue","usersScoreForHitValue","Number","length","wasPlayersOwnHit","isOtherPlayer","playersScoreForHitValue","highestScore","lowestScore","Object","values","acc","currentHighest","currentLowest","newHighest","newLowest","undefined","Infinity","creator","find","hasWinner","winnerName","keys","scoreForUserID","hasClosedOutBoard","isHightest","name","isLowest","ScoreBoard","game","error","map","value","index","userIDForScore","userScore","isMine","number","ScoreRow","playerID","handleupdateGameScore","SVG","children","rest"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport {\n  updateGameScore,\n  gameReset,\n  newGame,\n  gameUndoLastMove\n} from \"../api/firebase\";\nimport { useGetGame } from \"../effects/game\";\n\n// 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID,\n    creator_id,\n    score_events: scoreEvents = []\n  } = props;\n  const userID = useGetUserID();\n\n  // Initialize score object based on how many players there are\n  let score: Score = players.reduce((scoreObject, player) => {\n    return {\n      ...scoreObject,\n      [player.id]: {\n        20: 0,\n        19: 0,\n        15: 0,\n        18: 0,\n        17: 0,\n        16: 0,\n        25: 0,\n        total: 0\n      }\n    };\n  }, {});\n\n  // For each `score_event`, update the score for everyone\n  scoreEvents.forEach((scoreEvent: ScoreEvent) => {\n    if (!userID) {\n      return;\n    }\n\n    const { user_id: scoreEventUserID, hit_value: hitValue } = scoreEvent;\n\n    const usersScoreForHitValue = Number(score[scoreEventUserID][hitValue]);\n    if (usersScoreForHitValue < 3) {\n      // Something because of typescript. Not sure yet\n      if (typeof score[scoreEventUserID][hitValue] === \"number\") {\n        score[scoreEventUserID][hitValue] += 1;\n      }\n    } else {\n      // The user already closed that number out\n      // If 2 player game, add it to their own score\n      // Else, add it to the other players who haven't closed it yet's score\n      if (players.length < 3) {\n        players.forEach((player: Player) => {\n          const wasPlayersOwnHit = player.id === scoreEventUserID;\n          if (wasPlayersOwnHit) {\n            score[player.id] += hitValue;\n          }\n        });\n      } else {\n        // Add score to users own score if players that don't have hitValue closed out\n        players.forEach((player: Player) => {\n          const isOtherPlayer = player.id !== scoreEventUserID;\n          const playersScoreForHitValue = score[player.id][hitValue];\n\n          if (isOtherPlayer && playersScoreForHitValue < 3) {\n            score[scoreEventUserID].total += hitValue;\n          }\n        });\n      }\n    }\n  });\n\n  const [highestScore, lowestScore] = Object.values(score).reduce(\n    (acc: [number, number], score: Score) => {\n      const [currentHighest, currentLowest] = acc;\n      let newHighest: number;\n      let newLowest: number;\n\n      if (score.total > currentHighest) {\n        newHighest = score.total;\n      }\n\n      if (score.total < currentLowest) {\n        newLowest = score.total;\n      }\n\n      return [\n        newHighest !== undefined ? currentHighest : 0,\n        newLowest !== undefined ? newLowest : currentLowest\n      ];\n    },\n    [0, Infinity]\n  );\n\n  const creator = players.find(player => player.id === creator_id);\n\n  let hasWinner = false;\n  let winnerName: string;\n\n  Object.keys(score).forEach(userID => {\n    const scoreForUserID = score[userID];\n    const hasClosedOutBoard =\n      scoreForUserID[15] === 3 &&\n      scoreForUserID[16] === 3 &&\n      scoreForUserID[17] === 3 &&\n      scoreForUserID[18] === 3 &&\n      scoreForUserID[19] === 3 &&\n      scoreForUserID[20] === 3 &&\n      scoreForUserID[25] === 3;\n\n    if (hasClosedOutBoard) {\n      if (players.length < 3) {\n        const isHightest = scoreForUserID.total === highestScore;\n        if (isHightest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      } else {\n        const isLowest = scoreForUserID.total === lowestScore;\n        if (isLowest) {\n          hasWinner = true;\n          const player = players.find(player => player.id === userID);\n          winnerName = player.name;\n        }\n      }\n    }\n  });\n\n  return hasWinner ? (\n    <div className=\"mx-auto\">\n      <img src=\"/winner.png\" className=\"w-full max-w-md md:mt-8 px-8\" />\n      <h1 className=\"chalk text-6xl px-8\">Nice one {winnerName}!</h1>\n\n      <div className=\"px-8\">\n        {creator && creator.id === userID ? (\n          <button\n            className=\"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\"\n            onClick={() => newGame(gameID)}\n          >\n            New Game\n          </button>\n        ) : (\n          <div className=\"text-sm my-16\">\n            Waiting for the host to start the another game...\n          </div>\n        )}\n      </div>\n    </div>\n  ) : (\n    <div className=\"flex-col overflow-x-scroll\">\n      <ScoreBoard score={score} gameID={gameID} players={players} />\n      <button\n        className=\"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\"\n        onClick={() => gameReset(gameID, userID)}\n      >\n        Reset Score\n      </button>\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID, score } = props;\n  const userID = useGetUserID();\n  const [game, error] = useGetGame(gameID);\n\n  return (\n    <div className=\"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\">\n      <div className=\"text-white\">\n        <div className=\"flex\">\n          <div className=\"score__column flex flex-col justify-center align-center\">\n            {[\"\", 20, 19, 18, 17, 16, 15, 25].map((value, index) => {\n              return (\n                <div\n                  key={value}\n                  className={`score__item h-16 ${\n                    index === 0 ? \"h-24\" : \"\"\n                  } md:h-24 w-24 px-4 flex items-center justify-center`}\n                >\n                  <span>\n                    {value === \"\" && game && game.score_events ? (\n                      <button\n                        onClick={() => gameUndoLastMove(gameID)}\n                        className=\"bg-teal-600 hover:bg-teal-500 rounded-full\"\n                      >\n                        <SVG stroke=\"1\">\n                          <path\n                            stroke=\"white\"\n                            d=\"M12 10h5a1 1 0 0 1 1 1v2a1 1 0 0 1-1 1h-5v2a1 1 0 0 1-1.7.7l-4-4a1 1 0 0 1 0-1.4l4-4A1 1 0 0 1 12 8v2z\"\n                          />\n                        </SVG>\n                      </button>\n                    ) : (\n                      value\n                    )}\n                  </span>\n                </div>\n              );\n            })}\n          </div>\n          {Object.keys(score).map(userIDForScore => {\n            const player = players.find(player => player.id === userIDForScore);\n            const userScore = score[userIDForScore];\n            const isMine = userIDForScore === userID;\n            return (\n              <div key={userIDForScore} className=\"score__column\">\n                <div\n                  className={classnames(\n                    \"score__item h-24 md:h-24 w-24 text-center pt-2 \",\n                    {\n                      \"bg-teal-700\": isMine\n                    }\n                  )}\n                >\n                  <div className=\"text-lg md:text-md text-gray-300\">\n                    {player.name}\n                  </div>\n                  <div className=\"text-4xl\">{userScore.total}</div>\n                </div>\n                {[20, 19, 18, 17, 16, 15, 25].map(number => {\n                  return (\n                    <ScoreRow\n                      key={number}\n                      number={number}\n                      score={score[userIDForScore][number]}\n                      playerID={userIDForScore}\n                      gameID={gameID}\n                    />\n                  );\n                })}\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleupdateGameScore() {\n    updateGameScore(gameID, userID, number);\n  }\n\n  return (\n    <div className=\"score__item h-16 md:h-24 flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleupdateGameScore()}\n        className={classnames(\n          \"flex-1 flex align-center justify-center text-white ont-bold w-100\",\n          {\n            \"bg-teal-700 hover:bg-teal-500\": isMine\n          }\n        )}\n      >\n        {score === 1 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n          </SVG>\n        )}\n        {score === 2 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n        {score > 2 && (\n          <SVG>\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n      </button>\n    </div>\n  );\n}\n\nfunction SVG(props) {\n  const { children, ...rest } = props;\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={48}\n      height={48}\n      fill=\"none\"\n      stroke=\"white\"\n      strokeWidth=\"1\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      {...rest}\n    >\n      {children}\n    </svg>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}