{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/sean/Workspace/darts/component/game.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore, resetScore } from \"../api/firebase\"; // 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  var join_id = props.join_id,\n      players = props.players,\n      gameID = props.id,\n      creator_id = props.creator_id,\n      scoreEvents = props.score_events;\n  var userID = useGetUserID();\n  var highestScore = 0;\n  var score = players.reduce(function (scoreObject, player) {\n    return _objectSpread({}, scoreObject, _defineProperty({}, player.id, {\n      15: 0,\n      16: 0,\n      17: 0,\n      18: 0,\n      19: 0,\n      20: 0,\n      25: 0\n    }));\n  });\n  console.log(\"score\", sore); // const highestScore = players.reduce((acc, player) => {\n  //   if (player.score.total > acc) {\n  //     return player.score.total;\n  //   } else {\n  //     return acc;\n  //   }\n  // }, 0);\n  // const lowestScore = players.reduce((acc, player) => {\n  //   if (player.score.total < acc) {\n  //     return player.score.total;\n  //   } else {\n  //     return acc;\n  //   }\n  // }, Infinity);\n  // const creator = players.find(player => player.id === creator_id);\n  // let hasWinner = false;\n  // let winnerName;\n  // for (var i = 0; i < players.length; i++) {\n  //   const player = players[i];\n  //   const scores = player.score;\n  //   const total =\n  //     scores[15] +\n  //     scores[16] +\n  //     scores[17] +\n  //     scores[18] +\n  //     scores[19] +\n  //     scores[20] +\n  //     scores[\"bull\"];\n  //   if (total === 21) {\n  //     if (players.length > 2) {\n  //       // Does player have the lowest score?\n  //       const isLowest = players.some(player => {\n  //         return player.score.total === lowestScore;\n  //       });\n  //       if (isLowest) {\n  //         hasWinner = true;\n  //         winnerName = player.name;\n  //       }\n  //     } else {\n  //       // Does player have the highest score?\n  //       const isHighest = players.some(player => {\n  //         return player.score.total === highestScore;\n  //       });\n  //       if (isHighest) {\n  //         hasWinner = true;\n  //         winnerName = player.name;\n  //       }\n  //     }\n  //   }\n  // }\n  //   <div className=\"mx-auto\">\n  //     <img src=\"/winner.png\" className=\"w-full max-w-md md:mt-8 px-8\" />\n  //     <h1 className=\"chalk text-6xl px-8\">Nice one {winnerName}!</h1>\n  //     <div className=\"px-8\">\n  //       {creator && creator.id === userID ? (\n  //         <button\n  //           className=\"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\"\n  //           onClick={() => newGame(gameID)}\n  //         >\n  //           New Game\n  //         </button>\n  //       ) : (\n  //         <div className=\"text-sm my-16\">\n  //           Waiting for the host to start the another game...\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // )\n\n  return __jsx(\"div\", {\n    className: \"flex-col overflow-x-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, __jsx(ScoreBoard, {\n    players: players,\n    gameID: gameID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    className: \"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\",\n    onClick: function onClick() {\n      return resetScore(gameID, userID);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, \"Reset Score\"));\n}\n\nfunction ScoreBoard(props) {\n  var players = props.players,\n      gameID = props.gameID;\n  var userID = useGetUserID();\n  return null; // return (\n  //   <div className=\"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\">\n  //     <div className=\"text-white\">\n  //       <div className=\"flex\">\n  //         <div className=\"score__column flex flex-col justify-center align-center\">\n  //           {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map((value, index) => {\n  //             return (\n  //               <div\n  //                 key={value}\n  //                 className={`score__item h-16 ${\n  //                   index === 0 ? \"h-24\" : \"\"\n  //                 } md:h-24 px-4 flex items-center justify-center`}\n  //               >\n  //                 <span>{value}</span>\n  //               </div>\n  //             );\n  //           })}\n  //         </div>\n  //         {players.map(({ id, name, score }) => {\n  //           const isMine = id === userID;\n  //           return (\n  //             <div key={id} className=\"score__column\">\n  //               <div\n  //                 className={classnames(\n  //                   \"score__item h-24 md:h-24 w-24 text-center pt-2 \",\n  //                   {\n  //                     \"bg-teal-700\": isMine\n  //                   }\n  //                 )}\n  //               >\n  //                 <div className=\"text-lg md:text-md text-gray-300\">{name}</div>\n  //                 {/*<div className=\"text-4xl\">{score.total}</div>*/}\n  //               </div>\n  //               {[20, 19, 18, 17, 16, 15, \"bull\"].map(number => {\n  //                 return (\n  //                   <ScoreRow\n  //                     key={number}\n  //                     number={number}\n  //                     score={score[number]}\n  //                     playerID={id}\n  //                     gameID={gameID}\n  //                   />\n  //                 );\n  //               })}\n  //             </div>\n  //           );\n  //         })}\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n}\n\nfunction ScoreRow(props) {\n  var number = props.number,\n      score = props.score,\n      gameID = props.gameID,\n      playerID = props.playerID;\n  var userID = useGetUserID();\n  var isMine = playerID === userID;\n\n  function handleUpdateScore() {\n    updateScore(gameID, userID, number);\n  }\n\n  return __jsx(\"div\", {\n    className: \"score__item h-16 md:h-24 flex items-stretch relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }\n  }, __jsx(\"button\", {\n    disabled: !isMine,\n    onClick: function onClick() {\n      return handleUpdateScore();\n    },\n    className: classnames(\"flex-1 flex align-center justify-center text-white ont-bold w-100\", {\n      \"bg-teal-700 hover:bg-teal-500\": isMine\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, score === 1 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  })), score === 2 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  })), score === 3 && __jsx(SVG, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }, __jsx(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"15\",\n    y1: \"9\",\n    x2: \"9\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), __jsx(\"line\", {\n    x1: \"9\",\n    y1: \"9\",\n    x2: \"15\",\n    y2: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }))));\n}\n\nfunction SVG(props) {\n  return __jsx(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: 48,\n    height: 48,\n    fill: \"none\",\n    stroke: \"white\",\n    strokeWidth: \"1\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["/Users/sean/Workspace/darts/component/game.tsx"],"names":["React","classnames","useGetUserID","updateScore","resetScore","Game","props","join_id","players","gameID","id","creator_id","scoreEvents","score_events","userID","highestScore","score","reduce","scoreObject","player","console","log","sore","ScoreBoard","ScoreRow","number","playerID","isMine","handleUpdateScore","SVG","children"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classnames from \"classnames\";\nimport { useGetUserID } from \"../effects/user\";\nimport { updateScore, resetScore, newGame } from \"../api/firebase\";\n\n// 2 person, closed + highest score\n// 3 person, closed + lowest score\n\nexport default function Game(props) {\n  const {\n    join_id,\n    players,\n    id: gameID,\n    creator_id,\n    score_events: scoreEvents\n  } = props;\n  const userID = useGetUserID();\n  const highestScore = 0;\n\n  let score = players.reduce((scoreObject, player) => {\n    return {\n      ...scoreObject,\n      [player.id]: {\n        15: 0,\n        16: 0,\n        17: 0,\n        18: 0,\n        19: 0,\n        20: 0,\n        25: 0\n      }\n    };\n  });\n\n  console.log(\"score\", sore);\n\n  // const highestScore = players.reduce((acc, player) => {\n  //   if (player.score.total > acc) {\n  //     return player.score.total;\n  //   } else {\n  //     return acc;\n  //   }\n  // }, 0);\n\n  // const lowestScore = players.reduce((acc, player) => {\n  //   if (player.score.total < acc) {\n  //     return player.score.total;\n  //   } else {\n  //     return acc;\n  //   }\n  // }, Infinity);\n\n  // const creator = players.find(player => player.id === creator_id);\n\n  // let hasWinner = false;\n  // let winnerName;\n  // for (var i = 0; i < players.length; i++) {\n  //   const player = players[i];\n  //   const scores = player.score;\n  //   const total =\n  //     scores[15] +\n  //     scores[16] +\n  //     scores[17] +\n  //     scores[18] +\n  //     scores[19] +\n  //     scores[20] +\n  //     scores[\"bull\"];\n\n  //   if (total === 21) {\n  //     if (players.length > 2) {\n  //       // Does player have the lowest score?\n  //       const isLowest = players.some(player => {\n  //         return player.score.total === lowestScore;\n  //       });\n\n  //       if (isLowest) {\n  //         hasWinner = true;\n  //         winnerName = player.name;\n  //       }\n  //     } else {\n  //       // Does player have the highest score?\n  //       const isHighest = players.some(player => {\n  //         return player.score.total === highestScore;\n  //       });\n\n  //       if (isHighest) {\n  //         hasWinner = true;\n  //         winnerName = player.name;\n  //       }\n  //     }\n  //   }\n  // }\n\n  //   <div className=\"mx-auto\">\n  //     <img src=\"/winner.png\" className=\"w-full max-w-md md:mt-8 px-8\" />\n  //     <h1 className=\"chalk text-6xl px-8\">Nice one {winnerName}!</h1>\n\n  //     <div className=\"px-8\">\n  //       {creator && creator.id === userID ? (\n  //         <button\n  //           className=\"mt-4 md:mt-24 w-full md:w-auto text-2xl bg-teal-500 hover:bg-teal-700 text-white py-2 px-4 rounded-lg shadow\"\n  //           onClick={() => newGame(gameID)}\n  //         >\n  //           New Game\n  //         </button>\n  //       ) : (\n  //         <div className=\"text-sm my-16\">\n  //           Waiting for the host to start the another game...\n  //         </div>\n  //       )}\n  //     </div>\n  //   </div>\n  // )\n  return (\n    <div className=\"flex-col overflow-x-scroll\">\n      <ScoreBoard players={players} gameID={gameID} />\n      <button\n        className=\"mt-24 mb-4 md:w-auto text-2xl bg-gray-800 hover:bg-teal-700 text-white py-2 px-4 text-xs rounded-lg shadow\"\n        onClick={() => resetScore(gameID, userID)}\n      >\n        Reset Score\n      </button>\n    </div>\n  );\n}\n\nfunction ScoreBoard(props) {\n  const { players, gameID } = props;\n  const userID = useGetUserID();\n\n  return null;\n  // return (\n  //   <div className=\"mt-4 md:mt-8 text-sm md:text-2xl bg-teal-800 rounded-lg chalk\">\n  //     <div className=\"text-white\">\n  //       <div className=\"flex\">\n  //         <div className=\"score__column flex flex-col justify-center align-center\">\n  //           {[\"\", 20, 19, 18, 17, 16, 15, \"bull\"].map((value, index) => {\n  //             return (\n  //               <div\n  //                 key={value}\n  //                 className={`score__item h-16 ${\n  //                   index === 0 ? \"h-24\" : \"\"\n  //                 } md:h-24 px-4 flex items-center justify-center`}\n  //               >\n  //                 <span>{value}</span>\n  //               </div>\n  //             );\n  //           })}\n  //         </div>\n  //         {players.map(({ id, name, score }) => {\n  //           const isMine = id === userID;\n  //           return (\n  //             <div key={id} className=\"score__column\">\n  //               <div\n  //                 className={classnames(\n  //                   \"score__item h-24 md:h-24 w-24 text-center pt-2 \",\n  //                   {\n  //                     \"bg-teal-700\": isMine\n  //                   }\n  //                 )}\n  //               >\n  //                 <div className=\"text-lg md:text-md text-gray-300\">{name}</div>\n  //                 {/*<div className=\"text-4xl\">{score.total}</div>*/}\n  //               </div>\n  //               {[20, 19, 18, 17, 16, 15, \"bull\"].map(number => {\n  //                 return (\n  //                   <ScoreRow\n  //                     key={number}\n  //                     number={number}\n  //                     score={score[number]}\n  //                     playerID={id}\n  //                     gameID={gameID}\n  //                   />\n  //                 );\n  //               })}\n  //             </div>\n  //           );\n  //         })}\n  //       </div>\n  //     </div>\n  //   </div>\n  // );\n}\n\nfunction ScoreRow(props) {\n  const { number, score, gameID, playerID } = props;\n  const userID = useGetUserID();\n  const isMine = playerID === userID;\n\n  function handleUpdateScore() {\n    updateScore(gameID, userID, number);\n  }\n\n  return (\n    <div className=\"score__item h-16 md:h-24 flex items-stretch relative\">\n      <button\n        disabled={!isMine}\n        onClick={() => handleUpdateScore()}\n        className={classnames(\n          \"flex-1 flex align-center justify-center text-white ont-bold w-100\",\n          {\n            \"bg-teal-700 hover:bg-teal-500\": isMine\n          }\n        )}\n      >\n        {score === 1 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n          </SVG>\n        )}\n        {score === 2 && (\n          <SVG>\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n        {score === 3 && (\n          <SVG>\n            <circle cx=\"12\" cy=\"12\" r=\"10\" />\n            <line x1=\"15\" y1=\"9\" x2=\"9\" y2=\"15\" />\n            <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"15\" />\n          </SVG>\n        )}\n      </button>\n    </div>\n  );\n}\n\nfunction SVG(props) {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width={48}\n      height={48}\n      fill=\"none\"\n      stroke=\"white\"\n      strokeWidth=\"1\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      {props.children}\n    </svg>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}